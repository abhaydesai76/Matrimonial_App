{"version":3,"sources":["utils/Storage.js","services/candidateService.js","reducers/candidateReducer.js","services/userService.js","reducers/userReducer.js","services/shortlistService.js","components/Dashboard.js","services/loginService.js","reducers/loginReducer.js","services/initializeService.js","components/MatrimonialForm.js","components/SearchForm.js","components/ViewCandidateForm.js","components/DirectoryForm.js","services/classifiedService.js","components/Classifieds.js","components/Footer.js","reducers/notificationReducer.js","App.js","reducers/initializeReducer.js","reducers/store.js","index.js"],"names":["storageUserKey","storagAvailableCandidateCountKey","user","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","candidateCount","baseUrl","getConfig","headers","Authorization","storage","token","create","candidate","a","axios","post","response","data","console","log","message","savePhoto","formdata","search","education","profession","city","country","gender","birthyear","get","getCandidateDetails","candidateID","getAll","updateCandidateDetails","put","initializeCandidates","dispatch","candidateService","candidates","type","saveCandidatePhoto","candidateReducer","state","action","updateCandidateId","id","candidateToUpdate","find","c","updatedCandidate","fullname","photo","marriagestatus","mobileno","birthdate","birthplace","birthtime","horoscope","height","weight","fathername","mothername","sibling1","relation1","sibling2","relation2","sibling3","relation3","address","native","mosal","email","relative1","contact1","relative2","contact2","relative3","contact3","relative4","contact4","relative5","contact5","relative6","contact6","remarks","map","baseURL","exception","then","update","remove","delete","getUserDetails","userID","userReducer","getShortlistCandidates","createShortlistCandidates","shortlists","request","updateShortlistCandidates","deleteShortlistCandidates","Dashboard","useDispatch","history","useHistory","useState","loggedinCandidate","setLoggedinCandidate","loggedinShortListed","setLoggedinShortListed","shortlist1","shortlist2","shortlist3","shortlist4","shortlist5","shortlistCandidates","loginID","loggedinCandidateID","useParams","loginid","loggedinUser","setTimeout","userService","newCandidateID","candidateid","useEffect","undefined","allCandidates","useSelector","Array","isArray","filter","shortlistService","length","shortlistid","shortlistCandidate","ViewDetails","push","pathname","className","Form","Table","striped","bordered","colSpan","Text","Control","name","value","readOnly","moment","format","align","Button","onClick","window","alert","UpdateDetails","width","aria-multiline","key","src","alt","login","credentials","userLogin","username","password","loginService","loginReducer","getEducation","getProfession","getCity","getCountry","getGender","getMarriageStatus","getHoroscope","getClassifiedCategory","MatrimonialForm","profilePhoto","setPhoto","isPhotoChanged","educations","setEducations","professions","setProfessions","cities","setCities","countries","setCountries","genders","setGenders","marriagestatuses","setMarriageStatuses","horoscopes","setHoroscopes","selectedEducation","setSelectedEducation","selectedProfession","setSelectedProfession","selectedCity","setSelectedCity","selectedCountry","setSelectedCountry","selectedGender","setSelectedGender","selectedMarriageStatus","setSelectedMarriageStatus","selectedHoroscope","setSelectedHoroscope","selectedCandidate","setSelectedCandidate","setFullname","setGender","setMarriageStatus","setMobileno","Date","setBirthdate","setBirthplace","setBirthTime","setHoroscope","setHeight","setWeight","setEducation","setProfession","setFathername","setMothername","setSibling1","setRelation1","setSibling2","setRelation2","setSibling3","setRelation3","setAddress","setCity","setCountry","setNative","setMosal","setEmail","setRelative1","setContact1","setRelative2","setContact2","setRelative3","setContact3","setRelative4","setContact4","setRelative5","setContact5","setRelative6","setContact6","setRemarks","location","useLocation","selectedCandidateID","initializeService","onPhotoSelect","event","URL","createObjectURL","target","files","onSubmit","preventDefault","formData","FormData","append","split","candidateObject","newCandidate","muted","placeholder","onChange","updateFullname","required","options","label","updateGender","defaultValue","TextField","updateBirthdate","substring","toString","inputProps","step","updateBirthTime","updateBirthplace","updateNative","updateMosal","updateMarriagetatus","updateHoroscope","updateHeight","updateWeight","updateEducation","updateProfession","updateMoblieno","updateEmail","updateAddress","updateCity","updateCountry","updateFathername","updateMothername","updateSibling1","updateRelation1","updateSibling2","updateRelation2","updateSibling3","updateRelation3","updateRelative1","updateContact1","updateRelative2","updateContact2","updateRelative3","updateContact3","File","isValid","updateRelative4","updateContact4","updateRelative5","updateContact5","updateRelative6","updateContact6","updateRemarks","BackToDashboard","SearchForm","selectedBirthYear","setSelectedBirthYear","availableCandidateCount","searchCandidates","getFullYear","searchResults","Label","selected","showYearPicker","searchCandidate","viewCandidateDetails","ViewCandidateForm","candidateToBeShortlisted","DirectoryForm","getClassified","classifiedID","createClassified","classified","updateClassified","deleteClassified","Classifieds","classifieds","setClassifieds","classifiedCategories","setclassifiedCategories","selectedCategory","setSelectedCategory","category","setCategory","description","setDescription","setName","phone","setPhone","expectedprice","setExpectedprice","classifiedService","phoneno","updateClassifiedCategory","as","rows","updateDescription","updateName","updatePhone","updateExpectedprice","Footer","displayNotification","notification","notificationReducer","App","showRegister","setShowRegister","setUsername","setPassword","padding","NotifyWith","HandleLogin","HandleLogout","Navbar","collapseOnSelect","expand","Toggle","aria-controls","Nav","Link","href","style","to","variant","path","updateUsername","updatePassword","margin","ShowRegistration","newUser","HandleRegistration","initializeReducer","reducer","combineReducers","notifications","initialize","users","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66b6e816.chunk.js","sourcesContent":["const storageUserKey = 'loggedMatrimonialAppUser'\r\nconst storagAvailableCandidateCountKey = 'availableCandidateCount'\r\nconst storagNewCandidateID = 'newCandidateID'\r\n\r\nconst saveUser = (user) =>  \r\n  localStorage.setItem(storageUserKey, JSON.stringify(user))\r\n\r\nconst loadUser = () =>\r\n  JSON.parse(localStorage.getItem(storageUserKey))\r\n\r\nconst logoutUser = () =>\r\n  localStorage.removeItem(storageUserKey)  \r\n\r\nconst saveCandidateCount = (candidateCount) => \r\n  localStorage.setItem(storagAvailableCandidateCountKey, candidateCount)\r\n\r\nconst loadCandidateCount = () => \r\n  localStorage.getItem(storagAvailableCandidateCountKey)\r\n\r\nconst removeCandidateCount = () => \r\n  localStorage.removeItem(storagAvailableCandidateCountKey)\r\n\r\nconst loadNewCandidateID = () => \r\n  localStorage.getItem(storagNewCandidateID)\r\n\r\nexport default { saveUser, loadUser, logoutUser, saveCandidateCount, loadCandidateCount, removeCandidateCount, loadNewCandidateID}","import axios from 'axios'\r\nimport storage from '../utils/Storage'\r\n\r\nconst baseUrl = '/api/candidates'\r\n\r\nconst getConfig = () => {\r\n    return {\r\n      headers: { Authorization: `bearer ${storage.loadUser().token}` }\r\n    }\r\n}\r\n\r\n// const sleep = (milliseconds) => {\r\n//   return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n// }\r\n\r\nconst create = async (candidate) => {\r\n  try {    \r\n    const response = await axios.post(baseUrl, candidate, getConfig())\r\n  \r\n    return response.data\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nconst savePhoto = async (formdata) => {\r\n  try {    \r\n    const response = await axios.post(baseUrl + '/savePhoto', formdata, getConfig())\r\n  \r\n    return response.data\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nconst search = async (education, profession, city, country, gender, birthyear) => {\r\n  try {\r\n    //const searchCriteria = {education, profession, city, country, gender, birthyear}\r\n\r\n    const response = await axios.get(`${baseUrl}/${education},${profession},${city},${country},${gender},${birthyear}`)    \r\n\r\n    // const response = await axios.get(`${baseUrl}, {'education': ${education}, 'profession': ${profession}, 'city': ${city},\r\n    //                                                        'country': ${country}, 'gender': ${gender}}`)\r\n\r\n    return response.data\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nconst getCandidateDetails = async (candidateID) => {\r\n  try {        \r\n    const response = await axios.get(`${baseUrl}/${candidateID}`)    \r\n    \r\n    return response.data\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nconst getAll = async () => {\r\n  try {    \r\n    const response = await axios.get(baseUrl)\r\n    \r\n    return response.data\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nconst updateCandidateDetails = async (candidate, candidateID) => {\r\n  try {\r\n    const response = await axios.put(`${baseUrl}/${candidateID}`, candidate)\r\n\r\n    return response.data\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }\r\n}\r\n\r\nexport default { getAll, create, savePhoto, search, getCandidateDetails, updateCandidateDetails }","import candidateService from '../services/candidateService'\r\n\r\nconst candidateReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'NEW_CANDIDATE':\r\n            // console.log('NEW_CANDIDATE : ', action.data)            \r\n            return [...state, action.data]\r\n        case 'SAVE_PHOTO':\r\n            return action.data\r\n        case 'INIT_CANDIDATE':\r\n            // console.log('INIT_CANDIDATE : ', action.data)\r\n            return action.data\r\n        case 'SEARCH_CANDIDATE':            \r\n            // console.log('SEARCH_CANDIDATE : ', action.data)\r\n            return action.data\r\n        case 'CANDIDATE_DETAILS':\r\n            // console.log('CANDIDATE_DETAILS : ', action.data)\r\n            return action.data\r\n        case 'UPDATE_CANDIDATE_DETAILS':\r\n            const updateCandidateId = action.data.id\r\n            const candidateToUpdate = state.find(c => c.id === updateCandidateId)\r\n\r\n            const updatedCandidate = {\r\n                ...candidateToUpdate,\r\n                fullname: action.data.fullname,\r\n                gender: action.data.gender,\r\n                photo: action.data.photo,\r\n                marriagestatus: action.data.marriagestatus,\r\n                mobileno: action.data.mobileno,\r\n                birthdate: action.data.birthdate,\r\n                birthplace: action.data.birthplace,\r\n                birthtime: action.data.birthtime,\r\n                horoscope: action.data.horoscope,\r\n                height: action.data.height,\r\n                weight: action.data.weight,\r\n                education: action.data.education,\r\n                profession: action.data.profession,\r\n                fathername: action.data.fathername,\r\n                mothername: action.data.mothername,\r\n                sibling1: action.data.sibling1,\r\n                relation1: action.data.relation1,\r\n                sibling2: action.data.sibling2,\r\n                relation2: action.data.relation2,\r\n                sibling3: action.data.sibling3,\r\n                relation3: action.data.relation3,\r\n                address: action.data.address,\r\n                city: action.data.city,\r\n                country: action.data.country,\r\n                native: action.data.native,\r\n                mosal: action.data.mosal,\r\n                email: action.data.email,\r\n                relative1: action.data.relative1,\r\n                contact1: action.data.contact1,\r\n                relative2: action.data.relative1,\r\n                contact2: action.data.contact1,\r\n                relative3: action.data.relative1,\r\n                contact3: action.data.contact1,\r\n                relative4: action.data.relative1,\r\n                contact4: action.data.contact1,\r\n                relative5: action.data.relative1,\r\n                contact5: action.data.contact1,\r\n                relative6: action.data.relative1,\r\n                contact6: action.data.contact1,\r\n                remarks: action.data.remarks\r\n            }\r\n            return state.map(candidate => candidate.id !== updateCandidateId ? candidate : updatedCandidate)           \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeCandidates = () => {\r\n    return async dispatch => {        \r\n        const candidates = await candidateService.getAll()\r\n        \r\n        dispatch({\r\n            type: 'INIT_CANDIDATE',\r\n            data: candidates\r\n        })\r\n    }\r\n}\r\n\r\n// const sleep = (milliseconds) => {\r\n//     return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n// }\r\n\r\nexport const newCandidate = (candidateObject) => {\r\n\r\n    return async dispatch => {        \r\n        const newCandidate = await candidateService.create(candidateObject)\r\n\r\n        // sleep(100000)\r\n\r\n        dispatch({\r\n            type:'NEW_CANDIDATE',\r\n            data: newCandidate\r\n        })\r\n    }\r\n}\r\n\r\nexport const saveCandidatePhoto = (formdata) => {\r\n    return async dispatch => {        \r\n        const savePhoto = await candidateService.savePhoto(formdata)\r\n  \r\n        dispatch({\r\n            type:'SAVE_PHOTO',\r\n            data: savePhoto\r\n        })\r\n    }\r\n}\r\n\r\nexport const searchCandidate = (education, profession, city, country, gender, birthyear) => {\r\n    return async dispatch => {\r\n        const searchResults = await candidateService.search(education, profession, city, country, gender, birthyear)\r\n\r\n        dispatch({\r\n            type: 'SEARCH_CANDIDATE',\r\n            data: searchResults\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCandidateDetails = (candidateID) => {\r\n    return async dispatch => {\r\n        const candidateDetails =  await candidateService.getCandidateDetails(candidateID)\r\n        \r\n        dispatch({\r\n            type: 'CANDIDATE_DETAILS',\r\n            data: candidateDetails\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateCandidateDetails = (candidate, candidateID) => {\r\n    return async dispatch => {\r\n        const updateCandidateDetails = await candidateService.updateCandidateDetails(candidate, candidateID)\r\n\r\n        dispatch({\r\n            type: 'UPDATE_CANDIDATE_DETAILS',\r\n            data: updateCandidateDetails\r\n        })\r\n    }\r\n}\r\n\r\nexport default candidateReducer","import axios from 'axios'\r\nimport storage from '../utils/Storage'\r\n\r\nconst baseURL = '/api/users'\r\n\r\nconst getConfig = () => {\r\n  try {\r\n    return {\r\n      headers: { Authorization: `bearer ${storage.loadUser().token}` }\r\n    }\r\n  }\r\n    catch (exception) {\r\n      console.log('exception : ', exception.message)\r\n      return exception\r\n  } \r\n}\r\n\r\nconst getAll = async () => {\r\n  try {\r\n    const response = await axios.get(baseURL)\r\n    return response.data\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }\r\n} \r\n\r\nconst getUserDetails = async (userID) => {\r\n  try {        \r\n    const response = await axios.get(`${baseURL}/${userID}`)    \r\n    \r\n    return response.data\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nconst create = (user) => {\r\n  try {\r\n    const request = axios.post(baseURL, user)\r\n    return request.then(response => response.data)\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  } \r\n}\r\n\r\nconst update = (user) => {\r\n  try {\r\n    const request = axios.put(`${baseURL}/${user.id}`, user, getConfig())\r\n    return request.then(response => response.data)\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }   \r\n}\r\n\r\nconst remove = (id) => {\r\n  try {\r\n    const request = axios.delete(`${baseURL}/${id}`, getConfig())\r\n    return request.then(response => response.data)\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  } \r\n}\r\n\r\nexport default { getAll, create, update, remove, getUserDetails }","import userService from  '../services/userService'\r\n\r\nconst userReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'NEW_USER':\r\n    return [...state, action.data]\r\n  case 'UPDATE_USER':\r\n    return action.data\r\n  case 'INIT_USER':\r\n    return action.data\r\n  case 'DELETE_USER':\r\n    return action.data\r\n  case 'USER_DETAILS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    const users = await userService.getAll()\r\n    \r\n    dispatch({\r\n      type: 'INIT_USER',\r\n      data: users\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (userID) => {\r\n  return async dispatch => {\r\n    const user = await userService.getUserDetails(userID)\r\n\r\n    dispatch({\r\n      type: 'USER_DETAILS',\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport default userReducer","import axios from 'axios'\r\nimport storage from '../utils/Storage'\r\n\r\nconst baseUrl = '/api/shortlists'\r\n\r\nconst getConfig = () => {\r\n    return {\r\n      headers: { Authorization: `bearer ${storage.loadUser().token}` }\r\n    }\r\n}\r\n\r\nconst getShortlistCandidates = async (candidateID) => {\r\n    try {\r\n        const response = await axios.get(`${baseUrl}/${candidateID}`)\r\n        \r\n        return response.data\r\n    }\r\n    catch (exception) {\r\n        console.log('exception : ', exception.message)\r\n        return exception\r\n    }  \r\n}\r\n\r\nconst createShortlistCandidates = async (shortlists) => {\r\n    try {\r\n        const request = axios.post(baseUrl, shortlists, getConfig())\r\n\r\n        return request.then(response => response.data)\r\n    }\r\n    catch (exception) {\r\n        console.log('exception : ', exception.message)\r\n        return exception\r\n    }  \r\n}\r\n\r\nconst updateShortlistCandidates = async (shortlists) => {\r\n    try {\r\n        const request = axios.put(`${baseUrl}/${shortlists.id}`, shortlists, getConfig())\r\n\r\n        return request.then(response => response.data)\r\n    }\r\n    catch (exception) {\r\n        console.log('exception : ', exception.message)\r\n        return exception\r\n    }  \r\n}\r\n\r\nconst deleteShortlistCandidates = async (id) => {\r\n    try {\r\n        const request = axios.delete(`${baseUrl}/${id}`, getConfig())\r\n\r\n        return request.then(response => response.data)\r\n    }\r\n    catch (exception) {\r\n        console.log('exception : ', exception.message)\r\n        return exception\r\n    }  \r\n}\r\n\r\nexport default { getShortlistCandidates, createShortlistCandidates, updateShortlistCandidates, deleteShortlistCandidates }","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\nimport { initializeCandidates, getCandidateDetails } from '../reducers/candidateReducer'\r\nimport { getUserDetails } from '../reducers/userReducer'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport candidateService from '../services/candidateService'\r\nimport userService from '../services/userService'\r\nimport shortlistService from '../services/shortlistService'\r\nimport storage from '../utils/Storage'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch()    \r\n    const history = useHistory()    \r\n    // const [allCandidates, setAllCandidates] = useState([]) \r\n    const [loggedinCandidate, setLoggedinCandidate] = useState(null) \r\n    const [loggedinShortListed, setLoggedinShortListed] = useState([])         \r\n    \r\n    let shortlist1 = \"\"\r\n    let shortlist2 = \"\"\r\n    let shortlist3 = \"\"\r\n    let shortlist4 = \"\"\r\n    let shortlist5 = \"\"\r\n    // let allCandidates = \"\"    \r\n    let shortlistCandidates = \"\"    \r\n    // let loggedinCandidateID = \"\"   \r\n    let loginID = null \r\n\r\n    // Get all details of loggedin candidate and populate \"Candidate Details\" section\r\n    let loggedinCandidateID = useParams().id    \r\n    \r\n    if (useParams().id === \"undefined\")\r\n    {\r\n        let user = storage.loadUser() \r\n        loginID = user.loginid\r\n\r\n        let loggedinUser = \"\"\r\n\r\n        setTimeout(()=> {\r\n            loggedinUser = dispatch(getUserDetails(loginID))\r\n            // loggedinUser = userService.getUserDetails(loginID)    \r\n            }, 3000)\r\n        \r\n        let newCandidateID = loggedinUser.candidateid\r\n        // console.log('value of new CandidateID : ', newCandidateID)\r\n        loggedinCandidateID = newCandidateID\r\n    }   \r\n    \r\n    useEffect(() => { candidateService.getCandidateDetails(loggedinCandidateID === undefined ? \"\" : loggedinCandidateID)\r\n        .then(loggedinCandidate => { setLoggedinCandidate(loggedinCandidate) }) }, [loggedinCandidateID])   \r\n  \r\n    // // Get details of all available candidates in application and populate \"Available Candidate Details\" section\r\n    // useEffect(() => { candidateService.getAll().then(allCandidates => { setAllCandidates(allCandidates) }) }, [])   \r\n    let allCandidates = useEffect(() => { dispatch(initializeCandidates()) },[dispatch, loggedinCandidateID])             \r\n    allCandidates = useSelector(state => state.candidates)\r\n    \r\n    if (Array.isArray(allCandidates))\r\n    {\r\n        allCandidates = allCandidates.filter(candidate => candidate.id !== loggedinCandidateID)\r\n    }    \r\n    \r\n    // Get details of all shortlisted candidates by loggedin candidate and populate \"Shortlisted Candidate Details\" section    \r\n    useEffect(() => { shortlistService.getShortlistCandidates(loggedinCandidateID === undefined ? \"\" : loggedinCandidateID)\r\n        .then(loggedinShortListed => { setLoggedinShortListed(loggedinShortListed) }) }, [loggedinCandidateID])                   \r\n\r\n    if (loggedinShortListed !== undefined & loggedinShortListed.length !== 0)\r\n    {\r\n        shortlist1 = loggedinShortListed[0].shortlistid\r\n        shortlist2 = loggedinShortListed[1].shortlistid\r\n        shortlist3 = loggedinShortListed[2].shortlistid\r\n        shortlist4 = loggedinShortListed[3].shortlistid\r\n        shortlist5 = loggedinShortListed[4].shortlistid\r\n    }    \r\n    \r\n    shortlistCandidates = useSelector(state => state.candidates)    \r\n    \r\n    if (Array.isArray(shortlistCandidates))\r\n    {\r\n        shortlistCandidates = shortlistCandidates.filter(shortlistCandidate => shortlistCandidate.id === shortlist1 || shortlistCandidate.id === shortlist2 ||\r\n            shortlistCandidate.id === shortlist3 || shortlistCandidate.id === shortlist4 || shortlistCandidate.id === shortlist5)\r\n\r\n    }\r\n\r\n    const ViewDetails = (candidateID) => {     \r\n        try\r\n        {\r\n            history.push({ pathname: `/ViewCandidateForm/${candidateID}`, data: {loggedinCandidateID, candidateID} })\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const UpdateDetails = (candidateID) => {     \r\n        try\r\n        {\r\n            if (loggedinCandidateID === \"undefined\")\r\n            {\r\n                window.alert(\"You need to enter your candidate details first before trying to update it.\")\r\n                history.push({ pathname: `/Matrimonialform/${loggedinCandidateID}`, data: {loggedinCandidateID} })\r\n            }\r\n            else\r\n            {\r\n                history.push({ pathname: `/Matrimonialform/${loggedinCandidateID}`, data: {loggedinCandidateID, candidateID} })        \r\n            }\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n    \r\n    if (loggedinCandidate !== null & shortlistCandidates !== null & allCandidates !== null)\r\n    {          \r\n        return (\r\n            <div className=\"components\"> \r\n                <Form>\r\n                    <Table striped bordered>\r\n                        <thead>                           \r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>                                  \r\n                                    <Table striped bordered>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th colSpan=\"2\"><b>Candidate Profile</b></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>                                                    \r\n                                                    <Form.Text className=\"bold-text\"><b>Full Name :</b></Form.Text>                                                                    \r\n                                                    <Form.Control id=\"fullname\" name=\"fullname\" value={loggedinCandidate.fullname} readOnly/>                                                    \r\n                                                    <Form.Text className=\"bold-text\"><b>Birth Date :</b></Form.Text>                                                                    \r\n                                                    <Form.Control id=\"birthdate\" name=\"birthdate\" value={moment(loggedinCandidate.birthdate).format('DD-MMM-YYYY')} readOnly/>\r\n                                                </td>\r\n                                                <td>                                                    \r\n                                                    <Form.Text className=\"bold-text\"><b>Education :</b></Form.Text>                                                                    \r\n                                                    <Form.Control id=\"education\" name=\"education\" value={loggedinCandidate.education} readOnly/>                                                    \r\n                                                    <Form.Text className=\"bold-text\"><b>Profession :</b></Form.Text>                                                                    \r\n                                                    <Form.Control id=\"profession\" name=\"profession\" value={loggedinCandidate.profession} readOnly/>\r\n                                                </td> \r\n                                            </tr>\r\n                                            <tr>                                                                                    \r\n                                                <td>\r\n                                                    <Form.Text className=\"bold-text\"><b>Email :</b></Form.Text>                                                                    \r\n                                                    <Form.Control id=\"email\" name=\"email\" value={loggedinCandidate.email} readOnly/>                                                    \r\n                                                    <Form.Text className=\"bold-text\"><b>Mobile No :</b></Form.Text>                                                                    \r\n                                                    <Form.Control id=\"mobileno\" name=\"mobileno\"  value={loggedinCandidate.mobileno} readOnly/>\r\n                                                </td>\r\n                                                <td>                                                    \r\n                                                    <Form.Text className=\"bold-text\"><b>Height (cms) :</b></Form.Text>                                                                    \r\n                                                    <Form.Control id=\"height\" name=\"height\" value={loggedinCandidate.height} readOnly/>                                                    \r\n                                                    <Form.Text className=\"bold-text\"><b>Weight (kgs) :</b></Form.Text>                                                                    \r\n                                                    <Form.Control id=\"weight\" name=\"weight\" value={loggedinCandidate.weight} readOnly/>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>                                               \r\n                                                <td colSpan=\"2\" align=\"right\">\r\n                                                    <Button id=\"update\" type=\"submit\"  onClick={() => UpdateDetails(loggedinCandidate.id)}>Update Details</Button>                                            \r\n                                                </td>                                            \r\n                                            </tr>                                        \r\n                                        </tbody>\r\n                                    </Table>    \r\n                                </td>\r\n                                <td>                                \r\n                                    <Table striped bordered>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th colSpan=\"9\">                                                    \r\n                                                    <b>Shortlisted Candidates Profile</b>\r\n                                                    {\" \"}\r\n                                                    (Count: {shortlistCandidates.length})                                                    \r\n                                                    {\" \"}\r\n                                                    (maximum 5 candidates can be shortlisted)                                                    \r\n                                                </th>                                                \r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>    \r\n                                            <tr>\r\n                                                <td width=\"250\" aria-multiline><b>Full Name</b></td>\r\n                                                {/* <td width=\"200\"><b>Gender</b></td> */}\r\n                                                <td width=\"300\"><b>Birth Date</b></td>\r\n                                                <td width=\"200\"><b>Education</b></td>\r\n                                                <td width=\"200\"><b>Profession</b></td>\r\n                                                {/* <td width=\"150\"><b>Height (cms)</b></td>\r\n                                                <td width=\"150\"><b>Weight (kgs)</b></td> */}\r\n                                                <td width=\"250\"><b>Photo</b></td>\r\n                                                <td width=\"350\"><b>View</b></td>\r\n                                            </tr> \r\n                                            {shortlistCandidates.map(shortlistCandidate =>\r\n                                            <tr key={shortlistCandidate.id}>\r\n                                                <td>{shortlistCandidate.fullname}</td>\r\n                                                {/* <td>{shortlistCandidate.gender}</td> */}\r\n                                                <td>{moment(shortlistCandidate.birthdate).format('DD-MMM-YYYY')}</td>\r\n                                                <td>{shortlistCandidate.education}</td>\r\n                                                <td>{shortlistCandidate.profession}</td>\r\n                                                {/* <td>{shortlistCandidate.height}</td>\r\n                                                <td>{shortlistCandidate.weight}</td> */}\r\n                                                <td><img id=\"CandidatePhoto\" src={shortlistCandidate.photo} alt=\"CandidatePhoto\" height=\"40\" width=\"40\"/></td>\r\n                                                <td><Button id='view' onClick={() => ViewDetails(shortlistCandidate.id)}>View Details</Button></td>\r\n                                            </tr>)}                                             \r\n                                        </tbody>\r\n                                    </Table>                                   \r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan=\"2\">\r\n                                    <Table striped bordered>\r\n                                        <thead>\r\n                                            <tr>                                                \r\n                                                <th colSpan=\"9\">\r\n                                                    <b>Available Candidate Details</b>\r\n                                                    {\" \"}\r\n                                                    (Count: {allCandidates.length})\r\n                                                </th> \r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td width=\"250\" aria-multiline><b>Full Name</b></td>\r\n                                            <td width=\"200\"><b>Gender</b></td>\r\n                                            <td width=\"300\"><b>Birth Date</b></td>\r\n                                            <td width=\"200\"><b>Education</b></td>\r\n                                            <td width=\"200\"><b>Profession</b></td>\r\n                                            <td width=\"150\"><b>Height (cms)</b></td>\r\n                                            <td width=\"150\"><b>Weight (kgs)</b></td>\r\n                                            <td width=\"250\"><b>Photo</b></td>\r\n                                            <td width=\"350\"><b>View</b></td>\r\n                                        </tr>\r\n                                        {allCandidates.map(candidate =>\r\n                                        <tr key={candidate.id}>\r\n                                            <td>{candidate.fullname}</td>\r\n                                            <td>{candidate.gender}</td>\r\n                                            <td>{moment(candidate.birthdate).format('DD-MMM-YYYY')}</td>\r\n                                            <td>{candidate.education}</td>\r\n                                            <td>{candidate.profession}</td>\r\n                                            <td>{candidate.height}</td>\r\n                                            <td>{candidate.weight}</td>\r\n                                            <td><img id=\"CandidatePhoto\" src={candidate.photo} alt=\"CandidatePhoto\" height=\"100\" width=\"100\"/></td>\r\n                                            <td><Button id='view' onClick={() => ViewDetails(candidate.id)}>View Details</Button></td>\r\n                                        </tr>)}\r\n                                        </tbody>\r\n                                    </Table>                                \r\n                                </td>    \r\n                            </tr>                                    \r\n                        </tbody>\r\n                    </Table>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div>\r\n                Loading ...\r\n            </div>\r\n        )\r\n    }  \r\n}\r\n\r\nexport default Dashboard","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    \r\n    return response.data\r\n    // return request.then(response =>\r\n    //   response.data)\r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nexport default { login }","import loginService from '../services/loginService'\r\nimport storage from '../utils/Storage'\r\n\r\nconst loginReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN' :\r\n      return action.data\r\n    case 'LOGOUT' :\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userLogin = (username, password)  => {   \r\n  return async dispatch => {\r\n    const user = await loginService.login({ username, password })    \r\n\r\n    storage.saveUser(user)\r\n\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      data: user\r\n    })      \r\n  }\r\n}\r\n\r\nexport const userLogout = () => {\r\n  return async dispatch => {\r\n    storage.removeCandidateCount()\r\n    storage.logoutUser()    \r\n\r\n    dispatch({\r\n      type: 'LOGOUT',\r\n      data: ''\r\n    })\r\n  }\r\n}\r\n\r\nexport default loginReducer","import axios from 'axios'\r\nimport storage from '../utils/Storage'\r\n\r\nconst getConfig = () => {\r\n    return {\r\n      headers: { Authorization: `bearer ${storage.loadUser().token}` }\r\n    }\r\n}\r\n\r\nconst getEducation = async () => {\r\n    try {\r\n      const response = await axios.get('/api/educations')\r\n      return response.data      \r\n    }\r\n    catch (exception) {\r\n      console.log('exception : ', exception.message)\r\n      return exception\r\n    }    \r\n}\r\n\r\nconst getProfession = async () => {\r\n    try {\r\n      const response = await axios.get('/api/professions')\r\n      return response.data      \r\n    }\r\n    catch (exception) {\r\n      console.log('exception : ', exception.message)\r\n      return exception\r\n    }    \r\n}\r\n\r\nconst getCity = async () => {\r\n    try {\r\n      const response = await axios.get('/api/cities')\r\n      return response.data      \r\n    }\r\n    catch (exception) {\r\n      console.log('exception : ', exception.message)\r\n      return exception\r\n    }    \r\n}\r\n\r\nconst getCountry = async () => {\r\n  try {\r\n    const response = await axios.get('/api/countries')\r\n    return response.data      \r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nconst getGender = async () => {\r\n  try {\r\n    const response = await axios.get('/api/genders')\r\n    return response.data      \r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nconst getMarriageStatus = async () => {\r\n  try {\r\n    const response = await axios.get('/api/marriagestatuses')\r\n    return response.data      \r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nconst getHoroscope = async () => {\r\n  try {\r\n    const response = await axios.get('/api/horoscopes')\r\n    return response.data      \r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nconst getClassifiedCategory = async () => {\r\n  try {\r\n    const response = await axios.get('/api/classifiedcategories')\r\n    return response.data      \r\n  }\r\n  catch (exception) {\r\n    console.log('exception : ', exception.message)\r\n    return exception\r\n  }    \r\n}\r\n\r\nexport default { getEducation, getProfession, getCity, getCountry, getGender, getMarriageStatus, getHoroscope, getClassifiedCategory }","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\nimport { useLocation, useHistory, useParams } from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { newCandidate, saveCandidatePhoto, updateCandidateDetails } from '../reducers/candidateReducer'\r\nimport { userLogin } from '../reducers/loginReducer'\r\nimport initializeService from '../services/initializeService'\r\nimport candidateService from '../services/candidateService'\r\nimport Select from 'react-select'\r\nimport storage from '../utils/Storage'\r\nimport moment from 'moment'\r\nimport { NavigationFullscreen } from 'material-ui/svg-icons';\r\n\r\nconst MatrimonialForm = () => {\r\n    \r\n    // This variable is used to pass photo file name to database table\r\n    let profilePhoto = ''    \r\n    \r\n    // This variable is used to pass photo BLOB to copy to server photo folder by using MULTER\r\n    const [photo, setPhoto] = useState('')    \r\n    let isPhotoChanged = false\r\n\r\n    // Get values from Database tables and load in respective arrays to use as a data source for Selection Dropdown\r\n    const [educations, setEducations] = useState([]) \r\n    const [professions, setProfessions] = useState([]) \r\n    const [cities, setCities] = useState([]) \r\n    const [countries, setCountries] = useState([]) \r\n    const [genders, setGenders] = useState([])\r\n    const [marriagestatuses, setMarriageStatuses] = useState([])\r\n    const [horoscopes, setHoroscopes] = useState([])\r\n\r\n    // To save selected value from Selection Dropdown to use while saving records to Database\r\n    const [selectedEducation, setSelectedEducation] = useState(null)\r\n    const [selectedProfession, setSelectedProfession] = useState(null)\r\n    const [selectedCity, setSelectedCity] = useState(null)\r\n    const [selectedCountry, setSelectedCountry] = useState(null)\r\n    const [selectedGender, setSelectedGender] = useState(null)   \r\n    const [selectedMarriageStatus, setSelectedMarriageStatus] = useState(null)\r\n    const [selectedHoroscope, setSelectedHoroscope] = useState(null)\r\n\r\n    const [selectedCandidate, setSelectedCandidate] = useState([])          \r\n\r\n    const [fullname, setFullname] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    // const[profilePhoto, setProfilePhoto] = useState('')\r\n    const [marriagestatus, setMarriageStatus] = useState('')\r\n    const [mobileno, setMobileno] = useState(0)\r\n    const [birthdate, setBirthdate] = useState(new Date(\"1990/01/01\"))\r\n    const [birthplace, setBirthplace] = useState('')\r\n    const [birthtime, setBirthTime] = useState(new Date())        \r\n    const [horoscope, setHoroscope] = useState('')\r\n    const [height, setHeight] = useState(0)\r\n    const [weight, setWeight] = useState(0)\r\n    const [education, setEducation] = useState('')\r\n    const [profession, setProfession] = useState('')\r\n    const [fathername, setFathername] = useState('')\r\n    const [mothername, setMothername] = useState('')\r\n    const [sibling1, setSibling1] = useState('')\r\n    const [relation1, setRelation1] = useState('')\r\n    const [sibling2, setSibling2] = useState('')\r\n    const [relation2, setRelation2] = useState('')\r\n    const [sibling3, setSibling3] = useState('')\r\n    const [relation3, setRelation3] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [native, setNative] = useState('')\r\n    const [mosal, setMosal] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [relative1, setRelative1] = useState('')\r\n    const [contact1, setContact1] = useState('')\r\n    const [relative2, setRelative2] = useState('')\r\n    const [contact2, setContact2] = useState('')    \r\n    const [relative3, setRelative3] = useState('')\r\n    const [contact3, setContact3] = useState('')\r\n    const [relative4, setRelative4] = useState('')\r\n    const [contact4, setContact4] = useState('')\r\n    const [relative5, setRelative5] = useState('')\r\n    const [contact5, setContact5] = useState('')\r\n    const [relative6, setRelative6] = useState('')\r\n    const [contact6, setContact6] = useState('')    \r\n    const [remarks, setRemarks] = useState('')   \r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory() \r\n\r\n    // This is to get matrimonial details of loggedin candidate, which will be populated in form and can be modified\r\n    const location = useLocation()\r\n    let selectedCandidateID = null    \r\n    let loginID = null    \r\n\r\n    // Assumption is being made that user, who is logging into application, is the candidate here.\r\n    if (location.data !== undefined)\r\n    {      \r\n        selectedCandidateID = location.data.loggedinCandidateID        \r\n    }        \r\n    \r\n    // This is to get loggedin user's ID, which will be used to update 'Users\" table.\r\n    let user = storage.loadUser() \r\n    loginID = user.loginid        \r\n    \r\n\r\n    useEffect(() => { initializeService.getEducation()\r\n        .then(educations => { setEducations(educations) }) }, [])    \r\n\r\n    useEffect(() => { initializeService.getProfession()\r\n        .then(professions => { setProfessions(professions) }) }, [])\r\n\r\n    useEffect(() => { initializeService.getCity()\r\n        .then(cities => { setCities(cities) }) }, [])\r\n\r\n    useEffect(() => { initializeService.getCountry()\r\n        .then(countries => { setCountries(countries) }) }, [])\r\n\r\n    useEffect(() => { initializeService.getGender()\r\n        .then(genders => { setGenders(genders) }) }, [])\r\n\r\n    useEffect(() => { initializeService.getMarriageStatus()\r\n        .then(marriagestatuses => { setMarriageStatuses(marriagestatuses) }) }, [])\r\n\r\n    useEffect(() => { initializeService.getHoroscope()\r\n        .then(horoscopes => { setHoroscopes(horoscopes) }) }, [])\r\n\r\n    // This gets matrimonial details of loggedin candidate, which will be populated in form and can be modified\r\n    useEffect(() => { candidateService.getCandidateDetails(selectedCandidateID === undefined ? \"\" : selectedCandidateID)\r\n        .then(selectedCandidate => { setSelectedCandidate(selectedCandidate) }) }, [selectedCandidateID])\r\n\r\n    const BackToDashboard = (candidateID) => {     \r\n        try\r\n        {\r\n            if (candidateID === null || candidateID === undefined)\r\n            {\r\n                let user = storage.loadUser() \r\n\r\n                if (user !== null & user !== undefined)\r\n                {\r\n                    candidateID = user.candidateid    \r\n                }\r\n            }\r\n\r\n            history.push({ pathname: `/dashboard/${candidateID}`, data: {id: candidateID} })\r\n        }\r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    // This is to get candidate photo BLOB, which will be saved in server photo folder\r\n    const onPhotoSelect = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {                \r\n                selectedCandidate.photo = URL.createObjectURL(event.target.files[0])\r\n                // selectedCandidate.photo = event.target.files[0]\r\n                setPhoto(event.target.files[0])\r\n                // setPhoto(URL.createObjectURL(event.target.files[0]))   \r\n                isPhotoChanged = true\r\n            }\r\n            else\r\n            {\r\n                selectedCandidate.photo = URL.createObjectURL(event.target.files[0])\r\n                setPhoto(event.target.files[0])\r\n                isPhotoChanged = true\r\n            }\r\n\r\n            selectedCandidate.profilePhoto = event.target.files[0].name\r\n            profilePhoto = event.target.files[0].name\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateFullname = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.fullname = event.target.value\r\n            }\r\n            setFullname(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateGender = (event) => {        \r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.gender = event.value\r\n            }\r\n            setSelectedGender(event.value)        \r\n            setGender(event.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateMarriagetatus = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.marriagestatus = event.value\r\n            }            \r\n            setSelectedMarriageStatus(event.value)\r\n            setMarriageStatus(event.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateMoblieno = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.mobileno = event.target.value\r\n            }            \r\n            setMobileno(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateBirthplace = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.birthplace = event.target.value\r\n            }            \r\n            setBirthplace(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateBirthdate = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.birthdate = event.target.value\r\n            }            \r\n            setBirthdate(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateBirthTime = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {                \r\n                selectedCandidate.birthtime = event.target.value\r\n            }            \r\n            setBirthTime(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateHoroscope = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.horoscope = event.value\r\n            }            \r\n            setSelectedHoroscope(event.value)\r\n            setHoroscope(event.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateHeight = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.height = event.target.value\r\n            }            \r\n            setHeight(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateWeight = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.weight = event.target.value\r\n            }            \r\n            setWeight(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateEducation = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.education = event.value\r\n            }            \r\n            setSelectedEducation(event.value)\r\n            setEducation(event.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateProfession = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.profession = event.value\r\n            }            \r\n            setSelectedProfession(event.value)\r\n            setProfession(event.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n    \r\n    const updateFathername = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.fathername = event.target.value\r\n            }            \r\n            setFathername(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateMothername = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.mothername = event.target.value\r\n            }            \r\n            setMothername(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateSibling1 = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.sibling1 = event.target.value\r\n            }            \r\n            setSibling1(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateRelation1 = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.relation1 = event.target.value\r\n            }            \r\n            setRelation1(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateSibling2 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.sibling2 = event.target.value\r\n            }            \r\n            setSibling2(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateRelation2 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.relation2 = event.target.value\r\n            }            \r\n            setRelation2(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateSibling3 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.sibling3 = event.target.value\r\n            }            \r\n            setSibling3(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateRelation3 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.relation3 = event.target.value\r\n            }            \r\n            setRelation3(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateAddress = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.address = event.target.value\r\n            }            \r\n            setAddress(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateCity = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.city = event.value\r\n            }            \r\n            setSelectedCity(event.value)\r\n            setCity(event.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateCountry = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.country = event.value\r\n            }            \r\n            setSelectedCountry(event.value)\r\n            setCountry(event.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateNative = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.native = event.target.value\r\n            }            \r\n            setNative(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateMosal = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.mosal = event.target.value\r\n            }            \r\n            setMosal(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateEmail = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.email = event.target.value\r\n            }            \r\n            setEmail(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateRelative1 = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.relative1 = event.target.value\r\n            }            \r\n            setRelative1(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateContact1 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.contact1 = event.target.value\r\n            }            \r\n            setContact1(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateRelative2 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.relative2 = event.target.value\r\n            }            \r\n            setRelative2(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateContact2 = (event) => {\r\n        try \r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.contact2 = event.target.value\r\n            }            \r\n            setContact2(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateRelative3 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.relative3 = event.target.value\r\n            }            \r\n            setRelative3(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateContact3 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.contact3 = event.target.value\r\n            }            \r\n            setContact3(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateRelative4 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.relative4 = event.target.value\r\n            }            \r\n            setRelative4(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateContact4 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.contact4 = event.target.value\r\n            }            \r\n            setContact4(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateRelative5 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.relative5 = event.target.value\r\n            }            \r\n            setRelative5(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateContact5 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.contact5 = event.target.value\r\n            }            \r\n            setContact5(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateRelative6 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.relative6 = event.target.value\r\n            }            \r\n            setRelative6(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateContact6 = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.contact6 = event.target.value\r\n            }            \r\n            setContact6(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateRemarks = (event) => {\r\n        try\r\n        {\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                selectedCandidate.remarks = event.target.value\r\n            }            \r\n            setRemarks(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n    const handleNewCandidate = (event) => {\r\n        try{\r\n            event.preventDefault()\r\n\r\n            setFullname(event.target.fullname.value)\r\n            event.target.fullname.value = ''                            \r\n            \r\n            setGender(selectedGender)                                        \r\n            setSelectedGender(null)\r\n    \r\n            // photo = event.target.photo.value\r\n            // event.target.photo.value = ''\r\n\r\n            // This will create a form object from candidate photo BLOB, which will be uploaded to server photo folder by using MULTER\r\n            const formData = new FormData()            \r\n            formData.append('photo', photo)       \r\n            \r\n            if (photo !== null & photo !== \"\")\r\n            {\r\n                isPhotoChanged = true\r\n            }\r\n            else\r\n            {\r\n                isPhotoChanged = false\r\n            }\r\n    \r\n            // This variable is used to pass photo file name to database table\r\n            // If user doesn't replace existing photo, then we need to create profilephoto value from photo field.\r\n            // Otherwise, profilephoto value would have been already set in \"onPhotoSelect\".\r\n            if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n            {\r\n                if (selectedCandidate.profilePhoto === undefined)\r\n                {\r\n                    selectedCandidate.profilePhoto = selectedCandidate.photo.split('/')[4].split('-')[1]\r\n                }   \r\n            }\r\n            // profilePhoto = photo.name\r\n            \r\n            setMarriageStatus(selectedMarriageStatus)\r\n            setSelectedMarriageStatus(null)\r\n\r\n            setMobileno(event.target.mobileno.value)\r\n            event.target.mobileno.value = 0\r\n           \r\n            // setBirthdate(event.target.birthdate.value)\r\n            // event.target.birthdate.value = ''           \r\n            \r\n            setBirthplace(event.target.birthplace.value)\r\n            event.target.birthplace.value = ''    \r\n            \r\n            // setBirthTime(event.target.birthtime.value)\r\n            // event.target.birthtime.value = ''                        \r\n\r\n            setHoroscope(selectedHoroscope)\r\n            setSelectedHoroscope(null)\r\n\r\n            setHeight(event.target.height.value)\r\n            event.target.height.value = 0\r\n    \r\n            setWeight(event.target.weight.value)\r\n            event.target.weight.value = 0\r\n    \r\n            setEducation(selectedEducation)\r\n            setSelectedEducation(null)\r\n            \r\n            setProfession(selectedProfession)\r\n            setSelectedProfession(null)\r\n\r\n            setFathername(event.target.fathername.value)\r\n            event.target.fathername.value = ''\r\n    \r\n            setMothername(event.target.mothername.value)\r\n            event.target.mothername.value = ''\r\n    \r\n            setSibling1(event.target.sibling1.value)\r\n            event.target.sibling1.value = ''\r\n    \r\n            setRelation1(event.target.relation1.value)\r\n            event.target.relation1.value = ''\r\n    \r\n            setSibling2(event.target.sibling2.value)\r\n            event.target.sibling2.value = ''\r\n    \r\n            setRelation2(event.target.relation2.value)\r\n            event.target.relation2.value = ''\r\n    \r\n            setSibling3(event.target.sibling3.value)\r\n            event.target.sibling3.value = ''\r\n    \r\n            setRelation3(event.target.relation3.value)\r\n            event.target.relation3.value = ''\r\n    \r\n            setAddress(event.target.address.value)\r\n            event.target.address.value = ''    \r\n            \r\n            setCity(selectedCity)\r\n            setSelectedCity(null)\r\n            \r\n            setCountry(selectedCountry)\r\n            setSelectedCountry(null)\r\n    \r\n            setNative(event.target.native.value)\r\n            event.target.native.value = ''\r\n    \r\n            setMosal(event.target.mosal.value)\r\n            event.target.mosal.value = ''\r\n    \r\n            setEmail(event.target.email.value)\r\n            event.target.email.value = ''\r\n    \r\n            setRelative1(event.target.relative1.value)\r\n            event.target.relative1.value = ''\r\n    \r\n            setContact1(event.target.contact1.value)\r\n            event.target.contact1.value = ''\r\n    \r\n            setRelative2(event.target.relative2.value)\r\n            event.target.relative2.value = ''\r\n    \r\n            setContact2(event.target.contact2.value)\r\n            event.target.contact2.value = ''\r\n    \r\n            setRelative3(event.target.relative3.value)\r\n            event.target.relative3.value = ''\r\n    \r\n            setContact3(event.target.contact3.value)\r\n            event.target.contact3.value = ''\r\n    \r\n            setRelative4(event.target.relative4.value)\r\n            event.target.relative4.value = ''\r\n    \r\n            setContact4(event.target.contact4.value)\r\n            event.target.contact4.value = ''\r\n    \r\n            setRelative5(event.target.relative5.value)\r\n            event.target.relative5.value = ''\r\n    \r\n            setContact5(event.target.contact5.value)\r\n            event.target.contact5.value = ''\r\n    \r\n            setRelative6(event.target.relative6.value)\r\n            event.target.relative6.value = ''\r\n    \r\n            setContact6(event.target.contact6.value)\r\n            event.target.contact6.value = ''\r\n            \r\n            setRemarks(event.target.remarks.value)\r\n            event.target.remarks.value = ''\r\n           \r\n            let candidateToBeAdded = ''                    \r\n\r\n            // If there is no existing CandidateID, means a new candidate is being added. If there is already existing \r\n            // CandidateID, means exising candidate details are being updated.                      \r\n            if (selectedCandidateID === null || selectedCandidateID === undefined)\r\n            {\r\n                const candidate  = {loginID, fullname, gender, photo, profilePhoto, marriagestatus, mobileno, birthdate, \r\n                    birthplace, birthtime, horoscope, height, weight, education, profession, fathername, mothername, \r\n                    sibling1, relation1, sibling2, relation2, sibling3, relation3, address, city, country, native, mosal,\r\n                    email, relative1, contact1, relative2, contact2, relative3, contact3, relative4, contact4,\r\n                    relative5, contact5, relative6, contact6, remarks}         \r\n                \r\n                // setTimeout(()=> {\r\n                //     candidateToBeAdded = dispatch(newCandidate(candidate))         \r\n                //   }, 3000)                 \r\n                \r\n                candidateToBeAdded = dispatch(newCandidate(candidate))\r\n\r\n                if (isPhotoChanged === true)\r\n                {\r\n                    const candidatePhoto = dispatch(saveCandidatePhoto(formData))           \r\n                }                \r\n            }\r\n            else\r\n            {                \r\n                const candidateToBeUpdated = dispatch(updateCandidateDetails(selectedCandidate, selectedCandidateID))\r\n    \r\n                if (isPhotoChanged === true)\r\n                {\r\n                    const candidatePhoto = dispatch(saveCandidatePhoto(formData)) \r\n                }                \r\n            }            \r\n\r\n            if (selectedCandidateID !== null && selectedCandidateID !== undefined)\r\n            {\r\n                let user = storage.loadUser() \r\n\r\n                if (user !== null & user !== undefined)\r\n                {\r\n                    selectedCandidateID = user.candidateid    \r\n                }\r\n            }\r\n            else\r\n            {               \r\n                // let storageUser = storage.loadUser()               \r\n                // let newCandidateID = storageUser.candidateid                \r\n            }\r\n            \r\n            history.push({ pathname: `/` })\r\n            // history.push({ pathname: `/dashboard/${selectedCandidateID}`, data: {id: selectedCandidateID} })\r\n            \r\n        }\r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    if (selectedCandidate !== null & selectedCandidate !== undefined)\r\n    // if (selectedCandidate !== null & selectedCandidate.birthdate !== undefined & selectedCandidate.birthtime !== undefined)\r\n    {   \r\n        return (\r\n            <div className=\"components\">\r\n                <Form onSubmit={handleNewCandidate}>        \r\n                    <Table striped bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"5\"><b>Candidate Matrimonial Details (fields with * are mandatory)</b></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                            <td width=\"300\">\r\n                                <p />\r\n                                <Form.Text muted><b>Full Name* :</b></Form.Text>                        \r\n                                <Form.Control id=\"fullname\" name=\"fullname\" value = {selectedCandidate.fullname === undefined ? fullname : selectedCandidate.fullname} \r\n                                    placeholder=\"Full Name*\"  onChange = {event => updateFullname(event)} required />\r\n                                <p />\r\n                                <Form.Text muted><b>Gender* :</b></Form.Text>                                                                                                               \r\n                                <Select options={genders} \r\n                                    value ={{ label: selectedCandidate.gender === undefined ? selectedGender === null ? \"Gender*\" : selectedGender : selectedCandidate.gender, \r\n                                                value: selectedCandidate.gender === undefined ? selectedGender : selectedCandidate.gender }}\r\n                                    onChange={event => updateGender(event)} defaultValue={{ label: 'All', value: 'ALL' }} />\r\n                                <p />                            \r\n                                <Form.Text muted><b>Birth Date* :</b></Form.Text>                                                                                                   \r\n                                <TextField id=\"birthdate\" type=\"date\" required onChange={event => updateBirthdate(event)}                                         \r\n                                    value={selectedCandidate.birthdate === undefined ? birthdate : selectedCandidate.birthdate.substring(0,10).toString()}/> \r\n                                <br />\r\n                                <br />                                \r\n                                <Form.Text muted><b>Birth Time* :</b></Form.Text>                \r\n                                <TextField id=\"birthtime\" type=\"time\" inputProps={{ step: 300 }} required onChange={event => updateBirthTime(event)}                                             \r\n                                    value={selectedCandidate.birthtime === undefined ? birthtime : selectedCandidate.birthtime.substring(0,5).toString()} /> \r\n                                <p />                               \r\n                                <Form.Text muted><b>Birth Place* :</b></Form.Text>\r\n                                <Form.Control id=\"birthplace\" name=\"birthplace\" value = {selectedCandidate.birthplace === undefined ? birthplace : selectedCandidate.birthplace}\r\n                                    placeholder=\"Birth Place*\" onChange = {event => updateBirthplace(event)} required/>                            \r\n                                <p />\r\n                                <Form.Text muted><b>Native* (Father's Hometown) :</b></Form.Text>\r\n                                <Form.Control id=\"native\" name=\"native\" value = {selectedCandidate.native === undefined ? native : selectedCandidate.native}\r\n                                    placeholder=\"Native*\" onChange = {event => updateNative(event)} required/>\r\n                                <p />\r\n                                <Form.Text muted><b>Mosal* (Mother's Hometown) :</b></Form.Text>\r\n                                <Form.Control id=\"mosal\" name=\"mosal\" value = {selectedCandidate.mosal === undefined ? mosal : selectedCandidate.mosal}\r\n                                    placeholder=\"Mosal*\" onChange = {event => updateMosal(event)} required/>\r\n                                <p />\r\n                                <Form.Text muted><b>Marraige Status* :</b></Form.Text>\r\n                                <Select options={marriagestatuses} \r\n                                    value ={{ label: selectedCandidate.marriagestatus === undefined ? selectedMarriageStatus === null ? \"Marriage Status*\" : selectedMarriageStatus : selectedCandidate.marriagestatus, \r\n                                                value: selectedCandidate.marriagestatus === undefined ? selectedMarriageStatus : selectedCandidate.marriagestatus }}\r\n                                    onChange={event => updateMarriagetatus(event)} defaultValue={{ label: 'All', value: 'ALL' }}/>\r\n                                <p />                                                                               \r\n                                <Form.Text muted><b>Horoscope* :</b></Form.Text>      \r\n                                <Select options={horoscopes} \r\n                                    value ={{ label: selectedCandidate.horoscope === undefined ? selectedHoroscope === null ? \"Horoscope*\"  : selectedHoroscope : selectedCandidate.horoscope, \r\n                                                value: selectedCandidate.horoscope === undefined ? selectedHoroscope : selectedCandidate.horoscope }}\r\n                                    onChange={event => updateHoroscope(event)} defaultValue={{ label: 'All', value: 'ALL' }}/>\r\n                            </td>                    \r\n                            <td width=\"300\">\r\n                                <p />\r\n                                <Form.Text muted><b>Height* (cms) :</b></Form.Text>\r\n                                <Form.Control id=\"height\" name=\"height\" value = {selectedCandidate.height === undefined ? height : selectedCandidate.height}\r\n                                    placeholder=\"Height (cms)*\" onChange = {event => updateHeight(event)} required/>\r\n                                <p />\r\n                                <Form.Text muted><b>Weight* (kgs) :</b></Form.Text>\r\n                                <Form.Control id=\"weight\" name=\"weight\" value = {selectedCandidate.weight === undefined ? weight : selectedCandidate.weight}\r\n                                    placeholder=\"Weight (kgs)*\" onChange = {event => updateWeight(event)} required />\r\n                                <p />\r\n                                <Form.Text muted><b>Education* :</b></Form.Text>\r\n                                <Select options={educations} \r\n                                    value ={{ label: selectedCandidate.education === undefined ? selectedEducation === null ? \"Education\" : selectedEducation : selectedCandidate.education, \r\n                                                value: selectedCandidate.education === undefined ? selectedEducation : selectedCandidate.education }}\r\n                                    onChange={event => updateEducation(event)} defaultValue={{ label: 'All', value: 'ALL' }}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Profession* :</b></Form.Text>\r\n                                <Select options={professions} \r\n                                    value ={{ label: selectedCandidate.profession === undefined ? selectedProfession === null ? \"Profession\" : selectedProfession : selectedCandidate.profession, \r\n                                                value: selectedCandidate.profession === undefined ? selectedProfession : selectedCandidate.profession }}\r\n                                    onChange={event => updateProfession(event)} defaultValue={{ label: 'All', value: 'ALL' }}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Mobile No* :</b></Form.Text>\r\n                                <Form.Control id=\"mobileno\" name=\"mobileno\" value = {selectedCandidate.mobileno === undefined ? mobileno : selectedCandidate.mobileno}\r\n                                    placeholder=\"Mobile No*\" onChange = {event => updateMoblieno(event)} required/>\r\n                                <p /> \r\n                                <Form.Text muted><b>Email* :</b></Form.Text>\r\n                                <Form.Control id=\"email\" name=\"email\" value = {selectedCandidate.email === undefined ? email : selectedCandidate.email}\r\n                                    placeholder=\"Email\" onChange = {event => updateEmail(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Address* :</b></Form.Text>\r\n                                <Form.Control id=\"address\" name=\"address\" value = {selectedCandidate.address === undefined ? address : selectedCandidate.address}\r\n                                    placeholder=\"Address*\" onChange = {event => updateAddress(event)} required/>\r\n                                <p />\r\n                                <Form.Text muted><b>City* :</b></Form.Text>\r\n                                <Select options={cities} \r\n                                    value ={{ label: selectedCandidate.city === undefined ? selectedCity === null ? \"City\" : selectedCity : selectedCandidate.city, \r\n                                                value: selectedCandidate.city === undefined ? selectedCity : selectedCandidate.city }}\r\n                                    onChange={event => updateCity(event)} defaultValue={{ label: 'All', value: 'ALL' }}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Country* :</b></Form.Text>\r\n                                <Select options={countries} \r\n                                    value ={{ label: selectedCandidate.country === undefined ? selectedCountry === null ? \"Country\" : selectedCountry : selectedCandidate.country, \r\n                                                value: selectedCandidate.country === undefined ? selectedCountry : selectedCandidate.country }}\r\n                                    onChange={event => updateCountry(event)}  defaultValue={{ label: 'All', value: 'ALL' }}/>                            \r\n                            </td>\r\n                            <td width=\"300\">\r\n                                <p />      \r\n                                <Form.Text muted><b>Father Name* :</b></Form.Text>                  \r\n                                <Form.Control id=\"fathername\" name=\"fathername\" value = {selectedCandidate.fathername === undefined ? fathername : selectedCandidate.fathername}\r\n                                    placeholder=\"Father Name*\" onChange = {event => updateFathername(event)} required/>\r\n                                <p />\r\n                                <Form.Text muted><b>Mother Name* :</b></Form.Text>\r\n                                <Form.Control id=\"mothername\" name=\"mothername\" value = {selectedCandidate.mothername === undefined ? mothername : selectedCandidate.mothername}\r\n                                    placeholder=\"Mother Name*\"onChange = {event => updateMothername(event)} required/>                        \r\n                                <p />\r\n                                <Form.Text muted><b>Sibling 1 :</b></Form.Text>\r\n                                <Form.Control id=\"sibling1\" name=\"sibling1\" value = {selectedCandidate.sibling1 === undefined ? sibling1 : selectedCandidate.sibling1}\r\n                                    placeholder=\"Sibling 1\" onChange = {event => updateSibling1(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Relation 1 :</b></Form.Text>\r\n                                <Form.Control id=\"relation1\" name=\"relation1\" value = {selectedCandidate.relation1 === undefined ? relation1 : selectedCandidate.relation1}\r\n                                    placeholder=\"Relation 1\" onChange = {event => updateRelation1(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Sibling 2 :</b></Form.Text>\r\n                                <Form.Control id=\"sibling2\" name=\"sibling2\" value = {selectedCandidate.sibling2 === undefined ? sibling2 : selectedCandidate.sibling2}\r\n                                    placeholder=\"Sibling 2\" onChange = {event => updateSibling2(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Relation 2 :</b></Form.Text>\r\n                                <Form.Control id=\"relation2\" name=\"relation2\" value = {selectedCandidate.relation2 === undefined ? relation2 : selectedCandidate.relation2}\r\n                                    placeholder=\"Relation 2\" onChange = {event => updateRelation2(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Sibling 3 :</b></Form.Text>\r\n                                <Form.Control id=\"sibling3\" name=\"sibling3\" value = {selectedCandidate.sibling3 === undefined ? sibling3 : selectedCandidate.sibling3}\r\n                                    placeholder=\"Sibling 3\" onChange = {event => updateSibling3(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Relation 3 :</b></Form.Text>\r\n                                <Form.Control id=\"relation3\" name=\"relation3\" value = {selectedCandidate.relation3 === undefined ? relation3 : selectedCandidate.relation3}\r\n                                    placeholder=\"Relation 3\" onChange = {event => updateRelation3(event)}/>       \r\n                            </td>\r\n                            <td width=\"300\">                                \r\n                                <p />\r\n                                <Form.Text muted><b>Relative 1* :</b></Form.Text>\r\n                                <Form.Control id=\"relative1\" name=\"relative1\" value = {selectedCandidate.relative1 === undefined ? relative1 : selectedCandidate.relative1}\r\n                                    placeholder=\"Relative 1*\" onChange = {event => updateRelative1(event)} required/>\r\n                                <p />\r\n                                <Form.Text muted><b>Contact 1* :</b></Form.Text>\r\n                                <Form.Control id=\"contact1\" name=\"contact1\" value = {selectedCandidate.contact1 === undefined ? contact1 : selectedCandidate.contact1}\r\n                                    placeholder=\"Contact 1*\" onChange = {event => updateContact1(event)} required/>\r\n                                <p />\r\n                                <Form.Text muted><b>Relative 2* :</b></Form.Text>\r\n                                <Form.Control id=\"relative2\" name=\"relative2\" value = {selectedCandidate.relative2 === undefined ? relative2 : selectedCandidate.relative2}\r\n                                    placeholder=\"Relative 2*\" onChange = {event => updateRelative2(event)} required/>\r\n                                <p />\r\n                                <Form.Text muted><b>Contact 2* :</b></Form.Text>\r\n                                <Form.Control id=\"contact2\" name=\"contact2\" value = {selectedCandidate.contact2 === undefined ? contact2 : selectedCandidate.contact2}\r\n                                    placeholder=\"Contact 2*\" onChange = {event => updateContact2(event)} required/>\r\n                                <p />\r\n                                <Form.Text muted><b>Relative 3* :</b></Form.Text>\r\n                                <Form.Control id=\"relative3\" name=\"relative3\" value = {selectedCandidate.relative3 === undefined ? relative3 : selectedCandidate.relative3}\r\n                                    placeholder=\"Relative 3*\" onChange = {event => updateRelative3(event)} required/>\r\n                                <p />\r\n                                <Form.Text muted><b>Contact 3* :</b></Form.Text>\r\n                                <Form.Control id=\"contact3\" name=\"contact3\" value = {selectedCandidate.contact3 === undefined ? contact3 : selectedCandidate.contact3}\r\n                                    placeholder=\"Contact 3*\" onChange = {event => updateContact3(event)} required/>\r\n                                <p />                                               \r\n                                <Form.Text muted><b>Candidate Photo* :</b></Form.Text>                                                                                                                                      \r\n                                <img id=\"CandidatePhoto\" src={selectedCandidate.photo === undefined ? photo : selectedCandidate.photo} alt=\"CandidatePhoto\" height=\"125\" width=\"125\"/>                                     \r\n                                <p />                                        \r\n                                {selectedCandidate.photo != null ?                                     \r\n                                    <Form.File id=\"uploadPhoto\" name=\"uploadPhoto\" isValid={true} onChange={onPhotoSelect} /> :\r\n                                    <Form.File id=\"uploadPhoto\" name=\"uploadPhoto\" label=\"Test\" onChange={onPhotoSelect} required/>                               \r\n                                }\r\n                            </td>\r\n                            <td width=\"300\">\r\n                                <p />\r\n                                <Form.Text muted><b>Relative 4 :</b></Form.Text>\r\n                                <Form.Control id=\"relative4\" name=\"relative4\" value = {selectedCandidate.relative4 === undefined ? relative4 : selectedCandidate.relative4}\r\n                                    placeholder=\"Relative 4\" onChange = {event => updateRelative4(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Contact 4 :</b></Form.Text>\r\n                                <Form.Control id=\"contact4\" name=\"contact4\" value = {selectedCandidate.contact4 === undefined ? contact4 : selectedCandidate.contact4}\r\n                                    placeholder=\"Contact 4\" onChange = {event => updateContact4(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Relative 5 :</b></Form.Text>\r\n                                <Form.Control id=\"relative5\" name=\"relative5\" value = {selectedCandidate.relative5 === undefined ? relative5 : selectedCandidate.relative5}\r\n                                    placeholder=\"Relative 5\" onChange = {event => updateRelative5(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Contact 5 :</b></Form.Text>\r\n                                <Form.Control id=\"contact5\" name=\"contact5\" value = {selectedCandidate.contact5 === undefined ? contact5 : selectedCandidate.contact5}\r\n                                    placeholder=\"Contact 5\" onChange = {event => updateContact5(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Relative 6 :</b></Form.Text>\r\n                                <Form.Control id=\"relative6\" name=\"relative6\" value = {selectedCandidate.relative6 === undefined ? relative6 : selectedCandidate.relative6}\r\n                                    placeholder=\"Relative 6\" onChange = {event => updateRelative6(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Contact 6 :</b></Form.Text>\r\n                                <Form.Control id=\"contact6\" name=\"contact6\" value = {selectedCandidate.contact6 === undefined ? contact6 : selectedCandidate.contact6}\r\n                                    placeholder=\"Contact 6\" onChange = {event => updateContact6(event)}/>\r\n                                <p />\r\n                                <Form.Text muted><b>Remarks :</b></Form.Text>                            \r\n                                <Form.Control id=\"remarks\" name=\"remarks\" value = {selectedCandidate.remarks === undefined ? remarks : selectedCandidate.remarks}\r\n                                    placeholder=\"Remarks\" onChange = {(event) => updateRemarks(event)}/>\r\n                                <p />                 \r\n                                <td>       \r\n                                <Button id=\"create\" type=\"submit\">Save Details</Button>\r\n                                {\" \"}\r\n                                <Button id=\"back\" onClick={() => BackToDashboard(selectedCandidateID)}>Back</Button>\r\n                                </td>\r\n                                <p />\r\n                            </td>\r\n                            </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </Form>\r\n        </div>\r\n        )\r\n}\r\nelse\r\n    {\r\n        return (\r\n            <div>\r\n                Loading ...\r\n            </div>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default MatrimonialForm","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useParams } from 'react-router-dom'\r\nimport Select from 'react-select'\r\nimport { initializeCandidates, searchCandidate } from '../reducers/candidateReducer'\r\nimport initializeService from '../services/initializeService'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport storage from '../utils/Storage'\r\nimport moment from 'moment'\r\n\r\nconst SearchForm = () => {\r\n\r\n    const [educations, setEducations] = useState([]) \r\n    const [professions, setProfessions] = useState([]) \r\n    const [cities, setCities] = useState([]) \r\n    const [countries, setCountries] = useState([]) \r\n    const [genders, setGenders] = useState([]) \r\n    \r\n    const [selectedEducation, setSelectedEducation] = useState(null);\r\n    const [selectedProfession, setSelectedProfession] = useState(null);\r\n    const [selectedCity, setSelectedCity] = useState(null);\r\n    const [selectedCountry, setSelectedCountry] = useState(null);\r\n    const [selectedGender, setSelectedGender] = useState(null);\r\n    const [selectedBirthYear, setSelectedBirthYear] = useState(null);\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()    \r\n    let loggedinCandidateID = useParams().id \r\n    let availableCandidateCount = 0\r\n\r\n    let searchResults = []    \r\n\r\n    let searchCandidates = useEffect(() => { dispatch(initializeCandidates()) },[dispatch])        \r\n    searchCandidates = useSelector(state => state.candidates)            \r\n    \r\n    if (loggedinCandidateID !== null || loggedinCandidateID !== undefined)\r\n    {\r\n        let user = storage.loadUser() \r\n\r\n        if (user !== null & user !== undefined)\r\n        {\r\n            loggedinCandidateID = user.candidateid    \r\n        }\r\n    }\r\n    \r\n    if (Array.isArray(searchCandidates))\r\n    {\r\n        searchCandidates = searchCandidates.filter(candidate => candidate.id !== loggedinCandidateID)\r\n    }    \r\n    \r\n    availableCandidateCount = storage.loadCandidateCount()\r\n\r\n    if (availableCandidateCount === null & availableCandidateCount === 0)\r\n    {\r\n        availableCandidateCount = searchCandidates.length\r\n        storage.saveCandidateCount(availableCandidateCount)\r\n    }\r\n\r\n    useEffect(() => { initializeService.getEducation()\r\n        .then(educations => { setEducations(educations) }) }, [])    \r\n\r\n    useEffect(() => { initializeService.getProfession()\r\n        .then(professions => { setProfessions(professions) }) }, [])\r\n\r\n    useEffect(() => { initializeService.getCity()\r\n        .then(cities => { setCities(cities) }) }, [])\r\n\r\n    useEffect(() => { initializeService.getCountry()\r\n        .then(countries => { setCountries(countries) }) }, [])\r\n\r\n    useEffect(() => { initializeService.getGender()\r\n        .then(genders => { setGenders(genders) }) }, [])\r\n\r\n    const BackToDashboard = (candidateID) => {     \r\n        try\r\n        {\r\n            if (candidateID === null || candidateID === undefined)\r\n            {\r\n                let user = storage.loadUser() \r\n\r\n                if (user !== null & user !== undefined)\r\n                {\r\n                    candidateID = user.candidateid    \r\n                }\r\n            }\r\n\r\n            history.push({ pathname: `/dashboard/${candidateID}`, data: {id: candidateID} })\r\n        }\r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const searchRecords = (event) => {\r\n        try\r\n        {\r\n            event.preventDefault()\r\n      \r\n            searchResults = dispatch(searchCandidate(selectedEducation === null ? \"ALL\" : selectedEducation.value, \r\n                                                    selectedProfession === null ? \"ALL\" : selectedProfession.value, \r\n                                                    selectedCity === null ? \"ALL\" : selectedCity.value,\r\n                                                    selectedCountry === null ? \"ALL\" : selectedCountry.value, \r\n                                                    selectedGender === null ? \"ALL\" : selectedGender.value, \r\n                                                    selectedBirthYear === null ? \"ALL\" : selectedBirthYear.getFullYear()))     \r\n                                                    \r\n            // console.log('value of searchResults : ', searchResults)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const viewCandidateDetails = (candidateID) => {\r\n        try\r\n        {\r\n            history.push({ pathname: '/ViewCandidateForm', data: {loggedinCandidateID, candidateID} })\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n    \r\n    if (searchCandidates !== null & searchCandidates !== undefined)\r\n    {\r\n        availableCandidateCount = storage.loadCandidateCount() \r\n\r\n        return (\r\n            <div className=\"components\">                \r\n                <Form onSubmit={searchRecords}>\r\n                    <Table striped bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"3\"><b>Available Profiles</b>\r\n                                    {\" \"}\r\n                                    (Count: {availableCandidateCount})\r\n                                </th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>     \r\n                            <tr>     \r\n                                <td> \r\n                                    <tr>  \r\n                                        <td><Form.Label><b>Education:</b></Form.Label></td>\r\n                                        <td width=\"250\"><Select options={educations} placeholder=\"Education\" value={selectedEducation}\r\n                                            onChange={setSelectedEducation} defaultValue={{ label: 'All', value: 'ALL' }}/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><Form.Label><b>Profession:</b></Form.Label></td>\r\n                                        <td><Select options={professions} placeholder=\"Profession\" value ={selectedProfession}\r\n                                            onChange={setSelectedProfession} defaultValue={{ label: 'All', value: 'ALL' }}/></td>\r\n                                    </tr>                                                                \r\n                                </td>                                     \r\n                                <td>\r\n                                    <tr>\r\n                                        <td><Form.Label><b>Gender:</b></Form.Label></td>\r\n                                        <td><Select options={genders} placeholder=\"Gender\" value ={selectedGender}\r\n                                            onChange={setSelectedGender} defaultValue={{ label: 'All', value: 'ALL' }}/></td>                                    \r\n                                    </tr> \r\n                                    <tr>\r\n                                        <td><Form.Label><b>Birth Year:</b></Form.Label></td>\r\n                                        <td><DatePicker selected={selectedBirthYear} onChange={setSelectedBirthYear} showYearPicker /></td>                                        \r\n                                        {/* <td><DatePicker selected={selectedBirthYear} onChange={date => setSelectedBirthYear(date)} showYearPicker openToDate={new Date(\"2000/01/01\")}/></td>                                        */}\r\n                                    </tr>                                \r\n                                </td>\r\n                                <td>\r\n                                    <tr>\r\n                                        <td><Form.Label><b>City:</b></Form.Label></td>\r\n                                        <td width=\"250\"><Select options={cities} placeholder=\"City\" value={selectedCity}\r\n                                            onChange={setSelectedCity} defaultValue={{ label: 'All', value: 'ALL' }}/></td>                                    \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><Form.Label><b>Country:</b></Form.Label></td>\r\n                                        <td><Select options={countries} placeholder=\"Country\" value={selectedCountry}\r\n                                            onChange={setSelectedCountry}  defaultValue={{ label: 'All', value: 'ALL' }}/></td>                                    \r\n                                    </tr>    \r\n                                </td> \r\n                            </tr>                             \r\n                            <tr>\r\n                                <td colSpan=\"3\" align=\"right\"><Button id=\"search\" type=\"submit\">Search Profiles</Button>\r\n                                {\" \"}\r\n                                <Button id=\"back\" onClick={() => BackToDashboard(loggedinCandidateID)}>Back</Button>\r\n                                </td>\r\n                            </tr>   \r\n                            </tbody>                         \r\n                        </Table>                                      \r\n                    </Form>\r\n                    <Table striped bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"9\"><b>Search Results</b>\r\n                                    {\" \"}\r\n                                    (Count: {searchCandidates.length})\r\n                                </th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>                        \r\n                            <tr>\r\n                                <td width=\"250\" aria-multiline><b>Full Name</b></td>\r\n                                <td width=\"200\"><b>Gender</b></td>\r\n                                <td width=\"300\"><b>Birth Date</b></td>\r\n                                <td width=\"200\"><b>Education</b></td>\r\n                                <td width=\"200\"><b>Profession</b></td>\r\n                                <td width=\"150\"><b>Height (cms)</b></td>\r\n                                <td width=\"150\"><b>Weight (kgs)</b></td>\r\n                                <td width=\"250\"><b>Photo</b></td>\r\n                                <td width=\"350\"><b>View</b></td>\r\n                            </tr>\r\n                            {searchCandidates.map(searchCandidate =>\r\n                            <tr key={searchCandidate.id}>\r\n                                <td>{searchCandidate.fullname}</td>\r\n                                <td>{searchCandidate.gender}</td>                                \r\n                                <td>{moment(searchCandidate.birthdate).format('DD-MMM-YYYY')}</td>\r\n                                <td>{searchCandidate.education}</td>\r\n                                <td>{searchCandidate.profession}</td>\r\n                                <td>{searchCandidate.height}</td>\r\n                                <td>{searchCandidate.weight}</td>\r\n                                <td><img id=\"CandidatePhoto\" src={searchCandidate.photo} alt=\"CandidatePhoto\" height=\"100\" width=\"100\"/></td>\r\n                                <td><Button id='view' onClick={() => viewCandidateDetails(searchCandidate.id)}>View Details</Button></td>\r\n                            </tr>)} \r\n                        </tbody>\r\n                    </Table>   \r\n            </div>    \r\n        )\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div>\r\n                Loading ...\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchForm","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Form, Button, Alert } from 'react-bootstrap'\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport storage from '../utils/Storage'\r\nimport moment from 'moment'\r\nimport { getCandidateDetails } from '../reducers/candidateReducer'\r\nimport candidateService from '../services/candidateService'\r\nimport shortlistService from '../services/shortlistService'\r\n\r\nconst ViewCandidateForm = () => {\r\n\r\n    const dispatch = useDispatch()  \r\n    const location = useLocation()\r\n    const history = useHistory() \r\n\r\n    const [selectedCandidate, setSelectedCandidate] = useState([]) \r\n\r\n    let selectedCandidateID = null\r\n    let loggedinCandidateID = null\r\n\r\n    if (location.data !== undefined)\r\n    {\r\n        selectedCandidateID = location.data.candidateID\r\n        // console.log(selectedCandidateID)\r\n        loggedinCandidateID = location.data.loggedinCandidateID    \r\n        // console.log(loggedinCandidateID)\r\n    }\r\n   \r\n    // let selectedCandidateDetails = useEffect(() => { dispatch(getCandidateDetails(selectedCandidateID)) })\r\n    // console.log('selectedCandidateDetails 1 : ', selectedCandidateDetails)\r\n    // selectedCandidateDetails = useSelector(state => state.candidateDetails)    \r\n    // console.log('selectedCandidateDetails 2 : ', selectedCandidateDetails)\r\n\r\n    useEffect(() => { candidateService.getCandidateDetails(selectedCandidateID === undefined ? \"\" : selectedCandidateID)\r\n                                        .then(selectedCandidate => { setSelectedCandidate(selectedCandidate) }) }, [selectedCandidateID])\r\n    \r\n    const shortlistCandidate = (event) => {\r\n        try{\r\n            event.preventDefault()\r\n\r\n            if (loggedinCandidateID === \"undefined\" || loggedinCandidateID === undefined)\r\n            {\r\n                window.alert(\"You need to enter your candidate details first before shortlisting someone else.\")\r\n                history.push({ pathname: `/Matrimonialform/${loggedinCandidateID}`, data: {id: loggedinCandidateID} })\r\n                // history.push({ pathname: `/dashboard/${loggedinCandidateID}`, data: {id: loggedinCandidateID} })\r\n            }\r\n            else\r\n            {\r\n                const shortlistCandidate = {loggedinCandidateID, selectedCandidateID}\r\n                const candidateToBeShortlisted = shortlistService.createShortlistCandidates(shortlistCandidate)\r\n                console.log('value of candidateToBeShortlisted : ', candidateToBeShortlisted)\r\n            }            \r\n        }\r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const BackToDashboard = (candidateID) => {     \r\n        try\r\n        {\r\n            if (candidateID === null || candidateID === undefined)\r\n            {\r\n                let user = storage.loadUser() \r\n\r\n                if (user !== null & user !== undefined)\r\n                {\r\n                    candidateID = user.candidateid    \r\n                }\r\n            }\r\n\r\n            history.push({ pathname: `/dashboard/${candidateID}`, data: {id: candidateID} })\r\n        }\r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    if (selectedCandidateID !== null & selectedCandidateID !== undefined)\r\n    {\r\n        return (\r\n            <div className=\"components\">                             \r\n                <Form onSubmit={shortlistCandidate}>\r\n                    <Table striped bordered>                                                       \r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"5\"><b>Candidate Matrimonial Details</b></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>    \r\n                            <tr>\r\n                                <td>                             \r\n                                    <Form.Text muted><b>Full Name :</b></Form.Text>                        \r\n                                    <Form.Control id=\"fullname\" name=\"fullname\" value={selectedCandidate.fullname} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Gender :</b></Form.Text>\r\n                                    <Form.Control id=\"gender\" name=\"gender\" value={selectedCandidate.gender} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Birth Date :</b></Form.Text>                                    \r\n                                    <Form.Control id=\"birthdate\" name=\"birthdate\" value={moment(selectedCandidate.birthdate).format('DD-MMM-YYYY')} readOnly/>                                    \r\n                                    <p />\r\n                                    <Form.Text muted><b>Birth Time :</b></Form.Text>\r\n                                    <Form.Control id=\"birthtime\" name=\"birthtime\" value={selectedCandidate.birthtime} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Birth Place :</b></Form.Text>\r\n                                    <Form.Control id=\"birthplace\" name=\"birthplace\" value={selectedCandidate.birthplace} readOnly/>                                    \r\n                                    <p />\r\n                                    <Form.Text muted><b>Native :</b></Form.Text>\r\n                                    <Form.Control id=\"native\" name=\"native\" value={selectedCandidate.native} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Mosal :</b></Form.Text>\r\n                                    <Form.Control id=\"mosal\" name=\"mosal\" value={selectedCandidate.mosal} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Marraige Status :</b></Form.Text>\r\n                                    <Form.Control id=\"marriagestatus\" name=\"marriagestatus\" value={selectedCandidate.marriagestatus} readOnly/>\r\n                                    <p />                                                                             \r\n                                    <Form.Text muted><b>Horoscope :</b></Form.Text>      \r\n                                    <Form.Control id=\"horoscope\" name=\"horoscope\" value={selectedCandidate.horoscope} readOnly/>\r\n                                </td>                    \r\n                                <td>\r\n                                    <Form.Text muted><b>Mobile No :</b></Form.Text>\r\n                                    <Form.Control id=\"mobileno\" name=\"mobileno\" value={selectedCandidate.mobileno} readOnly/>\r\n                                    <p />                             \r\n                                    <Form.Text muted><b>Height (cms) :</b></Form.Text>\r\n                                    <Form.Control id=\"height\" name=\"height\" value={selectedCandidate.height} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Weight (kgs) :</b></Form.Text>\r\n                                    <Form.Control id=\"weight\" name=\"weight\" value={selectedCandidate.weight} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Education :</b></Form.Text>\r\n                                    <Form.Control id=\"education\" name=\"education\" value={selectedCandidate.education} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Profession :</b></Form.Text>\r\n                                    <Form.Control id=\"profession\" name=\"profession\" value={selectedCandidate.profession} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Email :</b></Form.Text>\r\n                                    <Form.Control id=\"email\" name=\"email\" value={selectedCandidate.email} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Address :</b></Form.Text>\r\n                                    <Form.Control id=\"address\" name=\"address\" value={selectedCandidate.address} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>City :</b></Form.Text>\r\n                                    <Form.Control id=\"city\" name=\"city\" value={selectedCandidate.city} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Country :</b></Form.Text>\r\n                                    <Form.Control id=\"country\" name=\"country\" value={selectedCandidate.country} readOnly/>\r\n                                    <p />                       \r\n                                </td>\r\n                                <td>\r\n                                <Form.Text muted><b>Father Name :</b></Form.Text>\r\n                                    <Form.Control id=\"fathername\" name=\"fathername\" value={selectedCandidate.fathername} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Mother Name :</b></Form.Text>\r\n                                    <Form.Control id=\"mothername\" name=\"mothername\" value={selectedCandidate.mothername} readOnly/>                          \r\n                                    <Form.Text muted><b>Sibling 1 :</b></Form.Text>\r\n                                    <Form.Control id=\"sibling1\" name=\"sibling1\" value={selectedCandidate.sibling1} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Relation 1 :</b></Form.Text>\r\n                                    <Form.Control id=\"relation1\" name=\"relation1\" value={selectedCandidate.relation1} readOnly/>\r\n                                    <p />            \r\n                                    <Form.Text muted><b>Sibling 2 :</b></Form.Text>\r\n                                    <Form.Control id=\"sibling2\" name=\"sibling2\" value={selectedCandidate.sibling2} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Relation 2 :</b></Form.Text>\r\n                                    <Form.Control id=\"relation2\" name=\"relation2\" value={selectedCandidate.relation2} readOnly/>\r\n                                    <p />                        \r\n                                    <Form.Text muted><b>Sibling 3 :</b></Form.Text>\r\n                                    <Form.Control id=\"sibling3\" name=\"sibling3\" value={selectedCandidate.sibling3} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Relation 3 :</b></Form.Text>\r\n                                    <Form.Control id=\"relation3\" name=\"relation3\" value={selectedCandidate.relation3} readOnly/>                        \r\n                                    <p />                                         \r\n                                </td>\r\n                                <td>\r\n                                                                               \r\n                                    <Form.Text muted><b>Relative 1 :</b></Form.Text>\r\n                                    <Form.Control id=\"relative1\" name=\"relative1\" value={selectedCandidate.relative1} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Contact 1 :</b></Form.Text>\r\n                                    <Form.Control id=\"contact1\" name=\"contact1\" value={selectedCandidate.contact1} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Relative 2 :</b></Form.Text>\r\n                                    <Form.Control id=\"relative2\" name=\"relative2\" value={selectedCandidate.relative2} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Contact 2 :</b></Form.Text>\r\n                                    <Form.Control id=\"contact2\" name=\"contact2\" value={selectedCandidate.contact2} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Relative 3 :</b></Form.Text>\r\n                                    <Form.Control id=\"relative3\" name=\"relative3\" value={selectedCandidate.relative3} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Contact 3 :</b></Form.Text>\r\n                                    <Form.Control id=\"contact3\" name=\"contact3\" value={selectedCandidate.contact3} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Candidate Photo :</b></Form.Text>                                    \r\n                                    <img id=\"CandidatePhoto\" src={selectedCandidate.photo} alt=\"CandidatePhoto\" height=\"125\" width=\"125\"/>                    \r\n                                </td>\r\n                                <td>                           \r\n                                    <Form.Text muted><b>Relative 4 :</b></Form.Text>\r\n                                    <Form.Control id=\"relative4\" name=\"relative4\" value={selectedCandidate.relative4} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Contact 4 :</b></Form.Text>\r\n                                    <Form.Control id=\"contact4\" name=\"contact4\" value={selectedCandidate.contact4} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Relative 5 :</b></Form.Text>\r\n                                    <Form.Control id=\"relative5\" name=\"relative5\" value={selectedCandidate.relative5} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Contact 5 :</b></Form.Text>\r\n                                    <Form.Control id=\"contact5\" name=\"contact5\" value={selectedCandidate.contact5} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Relative 6 :</b></Form.Text>\r\n                                    <Form.Control id=\"relative6\" name=\"relative6\" value={selectedCandidate.relative6} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Contact 6 :</b></Form.Text>\r\n                                    <Form.Control id=\"contact6\" name=\"contact6\" value={selectedCandidate.contact6} readOnly/>\r\n                                    <p />\r\n                                    <Form.Text muted><b>Remarks :</b></Form.Text>\r\n                                    <Form.Control id=\"remarks\" name=\"remarks\" value={selectedCandidate.remarks} defaultValue=\"remarks\"/>\r\n                                    <p />                        \r\n                                    <td>\r\n                                    <Button id=\"shortlist\" type=\"submit\">Shortlist</Button>\r\n                                    {\" \"}\r\n                                    <Button id=\"back\" onClick={() => BackToDashboard(loggedinCandidateID)}>Back</Button>\r\n                                    </td>\r\n                                    <p />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>                    \r\n                </Table>\r\n            </Form>\r\n        </div>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div>\r\n                Loading ...\r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default ViewCandidateForm","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\nimport { initializeCandidates, getCandidateDetails } from '../reducers/candidateReducer'\r\n\r\nconst DirectoryForm = () => {\r\n\r\n    const dispatch = useDispatch()    \r\n\r\n    const loggedinCandidateID = useParams().id\r\n\r\n    let allCandidates = useEffect(() => { dispatch(initializeCandidates()) },[dispatch, loggedinCandidateID])             \r\n    allCandidates = useSelector(state => state.candidates)\r\n\r\n    if (allCandidates !== null)\r\n    { \r\n        return (\r\n            <div className=\"components\"> \r\n                    <Form>\r\n                        <Table striped bordered>\r\n                            <thead>\r\n                                <tr>                                                \r\n                                    <th colSpan=\"9\">\r\n                                        <b>Available Members</b>\r\n                                        {\" \"}\r\n                                        (Count: {allCandidates.length})\r\n                                    </th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>                            \r\n                                <tr>\r\n                                    <td width=\"250\" aria-multiline><b>Family Head Name</b></td>\r\n                                    <td width=\"200\"><b>Spouse Name</b></td>\r\n                                    <td width=\"300\"><b>Address</b></td>\r\n                                    <td width=\"200\"><b>Phone No</b></td>                                    \r\n                                </tr>\r\n                                {allCandidates.map(candidate =>\r\n                                <tr key={candidate.id}>\r\n                                    <td>{candidate.fathername}</td>\r\n                                    <td>{candidate.mothername}</td>\r\n                                    <td>{candidate.address}</td>\r\n                                    <td>{candidate.mobileno}</td>\r\n                                </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div>\r\n                Loading ...\r\n            </div>\r\n        )\r\n    }  \r\n}\r\n\r\nexport default DirectoryForm","import axios from 'axios'\r\nimport storage from '../utils/Storage'\r\n\r\nconst baseUrl = '/api/classifieds'\r\n\r\nconst getConfig = () => {\r\n    return {\r\n      headers: { Authorization: `bearer ${storage.loadUser().token}` }\r\n    }\r\n}\r\n\r\nconst getAll = async () => {\r\n    try {\r\n      const response = await axios.get(baseUrl)\r\n\r\n      return response.data\r\n    }\r\n    catch (exception) {\r\n      console.log('exception : ', exception.message)\r\n      return exception\r\n    }\r\n  } \r\n\r\nconst getClassified = async (classifiedID) => {\r\n    try {\r\n        const response = await axios.get(`${baseUrl}/${classifiedID}`)\r\n        \r\n        return response.data\r\n    }\r\n    catch (exception) {\r\n        console.log('exception : ', exception.message)\r\n        return exception\r\n    }  \r\n}\r\n\r\nconst createClassified = async (classified) => {\r\n    try {\r\n        const request = axios.post(baseUrl, classified, getConfig())\r\n\r\n        return request.then(response => response.data)\r\n    }\r\n    catch (exception) {\r\n        console.log('exception : ', exception.message)\r\n        return exception\r\n    }  \r\n}\r\n\r\nconst updateClassified = async (classified) => {\r\n    try {\r\n        const request = axios.put(`${baseUrl}/${classified.id}`, classified, getConfig())\r\n\r\n        return request.then(response => response.data)\r\n    }\r\n    catch (exception) {\r\n        console.log('exception : ', exception.message)\r\n        return exception\r\n    }  \r\n}\r\n\r\nconst deleteClassified = async (id) => {\r\n    try {\r\n        const request = axios.delete(`${baseUrl}/${id}`, getConfig())\r\n\r\n        return request.then(response => response.data)\r\n    }\r\n    catch (exception) {\r\n        console.log('exception : ', exception.message)\r\n        return exception\r\n    }  \r\n}\r\n\r\nexport default { getAll, getClassified, createClassified, updateClassified, deleteClassified }","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\nimport Select from 'react-select'\r\nimport initializeService from '../services/initializeService'\r\nimport classifiedService from '../services/classifiedService'\r\n\r\nconst Classifieds = () => {\r\n \r\n    const [classifieds, setClassifieds] = useState([]) \r\n    const [classifiedCategories, setclassifiedCategories] = useState([]) \r\n    const [selectedCategory, setSelectedCategory] = useState(null)\r\n    const [category, setCategory] = useState('')\r\n\r\n    const [description, setDescription] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [phone, setPhone] = useState(0)\r\n    const [address, setAddress] = useState('')\r\n    const [expectedprice, setExpectedprice] = useState(0)\r\n\r\n    useEffect(() => { initializeService.getClassifiedCategory()\r\n        .then(classifiedCategories => { setclassifiedCategories(classifiedCategories) }) }, [])    \r\n\r\n    const GetAvailableClassifieds = () => {\r\n        useEffect(() => { classifiedService.getAll()\r\n            .then(classifieds => { setClassifieds(classifieds) }) }, []) \r\n    }\r\n\r\n    const updateClassifiedCategory = (event) => {        \r\n        try \r\n        {            \r\n            setSelectedCategory(event.value)            \r\n            setCategory(event.value)    \r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n        \r\n    const updateDescription = (event) => {\r\n        try\r\n        {            \r\n            setDescription(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateName = (event) => {\r\n        try\r\n        {            \r\n            setName(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateAddress = (event) => {\r\n        try\r\n        {            \r\n            setAddress(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updatePhone = (event) => {\r\n        try\r\n        {            \r\n            setPhone(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const updateExpectedprice = (event) => {\r\n        try\r\n        {            \r\n            setExpectedprice(event.target.value)\r\n        }        \r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    const clearFields = () => {\r\n        setDescription(null)\r\n        setName(null)\r\n        setPhone(0)\r\n        setAddress(null)\r\n        setExpectedprice(0)\r\n    }\r\n\r\n    GetAvailableClassifieds()\r\n\r\n    const handleNewClassified = (event) => {\r\n        try\r\n        {\r\n            event.preventDefault()\r\n\r\n            setCategory(selectedCategory)                                            \r\n            setSelectedCategory(null)\r\n\r\n            setDescription(event.target.description.value)\r\n            event.target.description.value = ''\r\n\r\n            setName(event.target.name.value)\r\n            event.target.name.value = ''\r\n\r\n            setPhone(event.target.phoneno.value)\r\n            event.target.phoneno.value = ''\r\n\r\n            setAddress(event.target.address.value)\r\n            event.target.address.value = ''\r\n\r\n            setExpectedprice(event.target.expectedprice.value)\r\n            event.target.expectedprice.value = ''\r\n\r\n            const classified = {category, description, name, phone, address, expectedprice}\r\n            \r\n            const classifiedToBeAdded = classifiedService.createClassified(classified)\r\n\r\n            clearFields()\r\n        }\r\n        catch(exception)\r\n        {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    if (classifieds !== null)\r\n    {\r\n    return (        \r\n            <div className=\"components\"> \r\n                    <Form onSubmit={handleNewClassified}>\r\n                        <Table striped bordered>\r\n                            <thead>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td width=\"20%\">\r\n                                        <Table>\r\n                                            <thead>\r\n                                                <tr>                                                \r\n                                                    <th colSpan=\"3\">\r\n                                                        <b>Post a Classified</b>                                                        \r\n                                                    </th> \r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <p /> \r\n                                                        <Form.Text muted><b>Classified Category :</b></Form.Text>                                                                                                               \r\n                                                        <Select options={classifiedCategories} \r\n                                                            value ={{ label: selectedCategory === null ? \"Classified Category*\" : selectedCategory, \r\n                                                                        value: selectedCategory }}\r\n                                                            onChange={event => updateClassifiedCategory(event)} defaultValue={{ label: 'All', value: 'ALL' }} />                                                        \r\n                                                        <p />\r\n                                                        <Form.Text muted><b>Description :</b></Form.Text>                        \r\n                                                        <Form.Control id=\"description\" name=\"description\" as=\"textarea\" value = {description}\r\n                                                            placeholder=\"Description*\" required  rows={6} onChange = {event => updateDescription(event)}/>\r\n                                                        <p />\r\n                                                        <Form.Text muted><b>Name :</b></Form.Text>\r\n                                                        <Form.Control id=\"name\" name=\"name\" value = {name}\r\n                                                            placeholder=\"Name*\" onChange = {event => updateName(event)}/>\r\n                                                        <p />\r\n                                                        <Form.Text muted><b>Phone No :</b></Form.Text>\r\n                                                        <Form.Control id=\"phoneno\" name=\"phoneno\" value = {phone}\r\n                                                            placeholder=\"Phone No*\" onChange = {event => updatePhone(event)}/>\r\n                                                        <p />\r\n                                                        <Form.Text muted><b>Address :</b></Form.Text>\r\n                                                        <Form.Control id=\"address\" name=\"address\" value = {address}\r\n                                                            placeholder=\"Address\" onChange = {event => updateAddress(event)}/>\r\n                                                        <p />\r\n                                                        <Form.Text muted><b>Expected Price (INR):</b></Form.Text>\r\n                                                        <Form.Control id=\"expectedprice\" name=\"expectedprice\" value = {expectedprice}\r\n                                                            placeholder=\"Expected Price\" onChange = {event => updateExpectedprice(event)}/>\r\n                                                        <p />\r\n                                                        <Button id=\"create\" type=\"submit\">Save Details</Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </td>\r\n                                    <td width=\"80%\">\r\n                                        <Table striped bordered>\r\n                                            <thead>\r\n                                                <tr>                                                \r\n                                                    <th colSpan=\"6\">\r\n                                                        <b>Available Classifieds</b>\r\n                                                        {\" \"}\r\n                                                        (Count: {classifieds.length})\r\n                                                    </th> \r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td width=\"250\"><b>Classified Category</b></td>                                                    \r\n                                                    <td width=\"300\"><b>Description</b></td>\r\n                                                    <td width=\"200\"><b>Name</b></td>\r\n                                                    <td width=\"200\"><b>Phone</b></td>                                                    \r\n                                                    <td width=\"250\"><b>Address</b></td>\r\n                                                    <td width=\"350\"><b>Expected Price (INR)</b></td>\r\n                                                </tr> \r\n                                                {classifieds.map(classified =>\r\n                                                <tr key={classified.id}>\r\n                                                    <td>{classified.category}</td>                                                    \r\n                                                    <td>{classified.description}</td>\r\n                                                    <td>{classified.name}</td>\r\n                                                    <td>{classified.phone}</td>                                                    \r\n                                                    <td>{classified.address}</td>\r\n                                                    <td>{classified.expectedprice}</td>\r\n                                                    {/* <td><img id=\"CandidatePhoto\" src={shortlistCandidate.photo} alt=\"CandidatePhoto\" height=\"40\" width=\"40\"/></td> */}\r\n                                                    {/* <td><Button id='view' onClick={() => ViewDetails(shortlistCandidate.id)}>View Details</Button></td> */}\r\n                                                </tr>)}            \r\n                                            </tbody>    \r\n                                        </Table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Form>\r\n            </div>        \r\n        )\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div>\r\n                Loading ...\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default Classifieds","import React from 'react'\r\nimport '../App.css'\r\n\r\nconst Footer = () => { \r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <br />\r\n      <em>Matrimonial app, © Abhay Desai 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","const notificationReducer = (state = '', action) => {\r\n    switch (action.type) {\r\n    case 'DISPLAY':\r\n      return action.data\r\n    case 'HIDE':\r\n      return null\r\n    default:\r\n      return state\r\n    }\r\n  }\r\n  \r\n  export const displayNotification = (notification, type) => {\r\n    return async dispatch => {\r\n      dispatch({\r\n        type: 'DISPLAY',\r\n        data:{ notification: notification,\r\n          type: type }\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const hideNotification = () => {\r\n  \r\n    return {\r\n      type: 'HIDE',\r\n      data: null\r\n    }\r\n  }\r\n  \r\n  export default notificationReducer","import React, { useEffect, useState, Fragment } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport { Form, Button, Navbar, Nav, FormControl, Table } from 'react-bootstrap'\n\nimport Dashboard from './components/Dashboard'\nimport MatrimonialForm from './components/MatrimonialForm'\nimport SearchForm from './components/SearchForm'\nimport ViewCandidateForm from './components/ViewCandidateForm'\nimport DirectoryForm from './components/DirectoryForm'\nimport Classifieds from './components/Classifieds'\nimport Footer from './components/Footer'\nimport storage from './utils/Storage'\nimport './App.css'\n\nimport { initializeCandidates, getCandidateDetails } from './reducers/candidateReducer'\nimport { userLogin, userLogout } from './reducers/loginReducer'\nimport { initializeUsers } from './reducers/userReducer'\nimport { displayNotification, hideNotification } from './reducers/notificationReducer'\nimport loginService from './services/loginService'\nimport userService from './services/userService'\n\nconst App = () => {\n  \n  const dispatch = useDispatch()  \n  \n  const [showRegister, setShowRegister] = useState(false)\n  const [username, setUsername] = useState(null)\n  const [password, setPassword] = useState(null)\n  const [name, setName] = useState(null)\n  const [phone, setPhone] = useState(null)\n  const [email, setEmail] = useState(null)\n\n  const padding = {\n    padding: 5\n  }\n  \n  // let username = ''\n  // let password = ''  \n  let candidateid = ''\n  let loginid = ''\n\n  let user =  useSelector(state => state.login)\n  \n  // This is to get all available candidates in application.\n  let candidates = useEffect(() => { dispatch(initializeCandidates()) },[dispatch])  \n  candidates = useSelector(state => state.candidates)  \n\n  const NotifyWith = (message, type='success') => {\n    dispatch(displayNotification(message, type),\n      setTimeout(() => {\n        dispatch(hideNotification(null))\n      }, 4000))\n  }\n\n  const sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\n  const HandleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      // username = event.target.username.value\n      // event.target.username.value = ''\n      // password = event.target.password.value\n      // event.target.password.value = ''\n      \n      //user = await loginService.login({ username, password })\n\n      if (username === null || password === null)\n      {\n        window.alert(\"You need to enter your username and password to login to application.\")\n      }\n      else\n      {\n        user = dispatch(userLogin(username, password))      \n      \n        // If there is a successful login, then save user details in browser local storage.\n        if (user !== null || user !== undefined)\n        {          \n          storage.saveUser(user)                  \n          storage.saveCandidateCount(candidates.length)\n        }\n        \n        if (user !== null || user.name !== undefined)\n        {\n          NotifyWith(`${user.name} welcome back!`)\n        }\n      }\n    }\n    catch(exception) {\n      NotifyWith('wrong username/password', 'error')      \n    }    \n  }\n\n  const HandleLogout = () => {        \n    try\n    {\n      user = undefined\n      dispatch(userLogout())    \n    }    \n    catch(exception)\n    {\n      console.log(exception)\n    }\n  }\n\n  const ShowRegistration = () => {\n    try \n    {      \n      setShowRegister(true)\n    }\n    catch(exception)\n    {\n      console.log(exception)\n    }\n  }\n\n  const HandleRegistration = () => {\n    try \n    {      \n      const newUser = {username, password, name, phone, email}      \n\n      userService.create(newUser)      \n\n      setShowRegister(false)\n\n      setTimeout(()=> {\n        user = dispatch(userLogin(username, password))    \n      }, 2000)      \n\n      // do {\n      //   sleep(5000)\n      // } while (user !== Promise)\n\n      if (user !== null || user !== undefined)\n      {\n        storage.saveUser(user)        \n      }\n    }\n    catch(exception)\n    {\n      console.log(exception)\n    }\n  }\n\n  const updateUsername = (event) => {\n    try \n    {       \n      setUsername(event.target.value)\n    }        \n    catch(exception)\n    {\n        console.log(exception)\n    }\n  }\n\n  const updatePassword = (event) => {\n    try \n    {       \n      setPassword(event.target.value)\n    }        \n    catch(exception)\n    {\n        console.log(exception)\n    }\n  }\n\n  const updateName = (event) => {\n    try \n    {       \n      setName(event.target.value)\n    }        \n    catch(exception)\n    {\n        console.log(exception)\n    }\n  }\n\n  const updatePhone = (event) => {\n    try \n    {       \n      setPhone(event.target.value)\n    }        \n    catch(exception)\n    {\n        console.log(exception)\n    }\n  }\n\n  const updateEmail = (event) => {\n    try \n    {       \n      setEmail(event.target.value)\n    }        \n    catch(exception)\n    {\n        console.log(exception)\n    }\n  }\n\n  // This is to get loggedin user details after a successful login from storage.\n  user = storage.loadUser()   \n  \n  if (user !== null || user === undefined)\n  {\n    if (user.name === \"Error\")\n    {\n      window.alert(\"Please verify username and password being entered.\")\n      storage.logoutUser()\n      user = undefined\n    }\n    else\n    {\n      candidateid = user.candidateid    \n      loginid = user.loginid\n    }    \n  }\n\n  //user = 'engineer1'\n  \n  if ( !user ) {\n    return (\n      <div>\n        <Form onSubmit={HandleLogin}>\n          <Table striped bordered>\n          {/* <Table striped bordered size=\"sm\" variant=\"dark\"> */}\n            <thead>\n              <tr>\n                <th><h2>Login to Matrimonial Portal</h2></th>\n              </tr>              \n              </thead>\n            <tbody>\n              <tr>\n                <td><Form.Label>username:</Form.Label></td>\n                <td><Form.Control id=\"username\" name=\"username\" \n                      value = {username} onChange = {event => updateUsername(event)}/></td>\n              </tr>\n              <tr>\n                <td><Form.Label>password:</Form.Label></td>\n                <td><Form.Control id=\"password\" name=\"password\"\n                      value = {password} onChange = {event => updatePassword(event)}/></td>\n              </tr>\n              {showRegister === true ? \n              <Fragment>\n                <tr>\n                  <td><Form.Label>name:</Form.Label></td>\n                  <td><Form.Control id=\"name\" name=\"name\" \n                      value = {name} onChange = {event => updateName(event)}/></td>\n                </tr>\n                <tr>\n                  <td><Form.Label>phone:</Form.Label></td>\n                  <td><Form.Control id=\"phone\" name=\"phone\"\n                      value = {phone} onChange = {event => updatePhone(event)}/></td>\n                </tr>\n                <tr>\n                  <td><Form.Label>email:</Form.Label></td>\n                  <td><Form.Control id=\"email\" name=\"email\"\n                      value = {email} onChange = {event => updateEmail(event)}/></td>\n                </tr>\n                </Fragment>\n                : undefined}             \n              <tr>\n                <td></td>                \n                <td><Button variant=\"primary\" id=\"login\" type=\"submit\" margin=\"10px\">Login</Button>\n                {\" \"}\n                {showRegister === false ? \n                  <Button variant=\"link\" id=\"register\" margin=\"10px\" onClick={() => ShowRegistration()}>No UserID? Register Here...</Button>\n                  : undefined}\n                {showRegister === true ? \n                  <Button variant=\"primary\" id=\"register\" margin=\"10px\" onClick={() => HandleRegistration()}>Register</Button>                \n                  : undefined}\n                </td>                \n              </tr>\n            </tbody>          \n            </Table>\n        </Form>\n      </div>        \n    )\n}\nelse\n{\n  if (user.name === \"Error\")\n    {\n      window.alert(\"You need to enter your candidate details first before trying to update it.\")\n      storage.logoutUser()\n    }\n  else\n    {\n      return (\n        <div>      \n        <Router>\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar\">\n        {/* <Navbar collapseOnSelect expand=\"lg\" bg=\"warning\" variant=\"warning\"> */}\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n              <Nav className=\"m-auto\">\n                <Nav.Link href=\"#home\">\n                  <Link style={padding} to='/'>Home</Link>\n                </Nav.Link>\n                <Nav.Link href=\"#dashboard\">                  \n                  <Link style={padding} to={`/dashboard/${candidateid}`}>Dashboard</Link>\n                  {/* {candidateid === undefined ? \n                    <Link style={padding} to={`/dashboard/${loginid}`}>Dashboard</Link> : \n                    <Link style={padding} to={`/dashboard/${candidateid}`}>Dashboard</Link>} */}\n                </Nav.Link>\n                <Nav.Link href=\"#matrimonialform\">\n                  <Link style={padding} to='/matrimonialform'>Matrimonial Form</Link>           \n                </Nav.Link>\n                <Nav.Link href=\"#searchform\">\n                  <Link style={padding} to='/searchform'>Search Profiles</Link>\n                </Nav.Link>\n                <Nav.Link href=\"#classifieds\">\n                  <Link style={padding} to='/classifieds'>Classifieds</Link>\n                </Nav.Link>\n                <Nav.Link href=\"#directory\">\n                  <Link style={padding} to='/directory'>Directory</Link>\n                </Nav.Link>              \n                <Nav.Link href=\"#\" className=\"loggedinUser\">                \n                  {user ? <em>{user.name} logged in <Button variant=\"outline-danger\" onClick={() => HandleLogout()}>logout</Button></em> : <Link to='HandleLogin'>login</Link>}                \n                </Nav.Link>\n              </Nav>          \n            </Navbar>\n\n            <div className=\"content\">\n            <Switch>\n              <Route path=\"/dashboard/:id\">\n                <Dashboard />\n              </Route>\n              {/* <Route path='/dashboard'>\n                <Dashboard />\n              </Route> */}\n              {/* <Route path='/matrimonialform/:id'>\n                <MatrimonialForm />\n              </Route> */}\n              <Route path='/matrimonialform'>\n                <MatrimonialForm />\n              </Route>\n              <Route path='/searchform'>\n                <SearchForm />\n              </Route>\n              <Route path='/viewCandidateForm'>\n                <ViewCandidateForm />\n              </Route>\n              <Route path=\"/shortlists/:id\">\n                <Dashboard />\n              </Route>\n              <Route path=\"/shortlists\">\n                <Dashboard />\n              </Route>\n              <Route path='/classifieds'>\n                <Classifieds />\n              </Route>\n              <Route path='/directory'>\n                <DirectoryForm />\n              </Route>            \n              <Route path='/'>\n              </Route>\n            </Switch>\n            </div>         \n            <p />\n            <Footer />\n        </Router>\n      </div>\n      )  \n    }  \n  }\n}\n\nexport default App","import initializeService from '../services/initializeService'\r\n\r\nconst initializeReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'INIT_EDUCATIONS':\r\n            // console.log('INIT_EDUCATIONS : ', action.data)\r\n            return action.data\r\n        case 'INIT_PROFESSIONS':\r\n            // console.log('INIT_PROFESSIONS : ', action.data)\r\n            return action.data\r\n        case 'INIT_CITIES':\r\n            // console.log('INIT_CITIES : ', action.data)\r\n            return action.data\r\n        case 'INIT_COUNTRIES':\r\n            // console.log('INIT_COUNTRIES : ', action.data)\r\n            return action.data\r\n        case 'INIT_GENDERS':\r\n            // console.log('INIT_GENDERS : ', action.data)\r\n            return action.data\r\n        case 'INIT_MARRIAGESTATUSES':\r\n            // console.log('INIT_MARRIAGESTATUSES : ', action.data)\r\n            return action.data\r\n        case 'INIT_HOROSCOPES':\r\n            // console.log('INIT_HOROSCOPES : ', action.data)\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeEducations = () => {\r\n    return async dispatch => {\r\n        const educations = await initializeService.getEducation()\r\n        \r\n        dispatch({\r\n            type: 'INIT_EDUCATIONS',\r\n            data: educations\r\n        })\r\n    }\r\n}\r\n\r\nexport const initializeProfessions = () => {\r\n    return async dispatch => {\r\n        const professions = await initializeService.getProfession()\r\n        \r\n        dispatch({\r\n            type: 'INIT_PROFESSIONS',\r\n            data: professions\r\n        })\r\n    }\r\n}\r\n\r\nexport const initializeCities = () => {\r\n    return async dispatch => {\r\n        const cities = await initializeService.getCity()\r\n        \r\n        dispatch({\r\n            type: 'INIT_CITIES',\r\n            data: cities\r\n        })\r\n    }\r\n}\r\n\r\nexport const initializeCountries = () => {\r\n    return async dispatch => {\r\n        const countries = await initializeService.getCountry()\r\n        \r\n        dispatch({\r\n            type: 'INIT_COUNTRIES',\r\n            data: countries\r\n        })\r\n    }\r\n}\r\n\r\nexport const initializeGenders = () => {\r\n    return async dispatch => {\r\n        const genders = await initializeService.getGender()\r\n        \r\n        dispatch({\r\n            type: 'INIT_GENDERS',\r\n            data: genders\r\n        })\r\n    }\r\n}\r\n\r\nexport const initializeMarriageStatuses = () => {\r\n    return async dispatch => {\r\n        const marriagestatuses = await initializeService.getMarriageStatus()\r\n        \r\n        dispatch({\r\n            type: 'INIT_MARRIAGESTATUSES',\r\n            data: marriagestatuses\r\n        })\r\n    }\r\n}\r\n\r\nexport const initializeHoroscopes = () => {\r\n    return async dispatch => {\r\n        const horoscopes = await initializeService.getHoroscope()\r\n        \r\n        dispatch({\r\n            type: 'INIT_HOROSCOPES',\r\n            data: horoscopes\r\n        })\r\n    }\r\n}\r\n\r\nexport default initializeReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport candidateReducer from '../reducers/candidateReducer'\r\nimport notificationReducer from '../reducers/notificationReducer'\r\nimport loginReducer from '../reducers/loginReducer'\r\nimport initializeReducer from '../reducers/initializeReducer'\r\nimport userReducer from '../reducers/userReducer'\r\n//import togglableReducer from '../reducers/togglableReducer'\r\n//import commentReducer from '../reducers/commentReducer'\r\n\r\nconst reducer = combineReducers ({\r\n  candidates: candidateReducer,\r\n  notifications: notificationReducer,\r\n  login: loginReducer,\r\n  initialize: initializeReducer,\r\n  users: userReducer,\r\n  //togglable: togglableReducer,\r\n  //comments: commentReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './reducers/store'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'))"],"sourceRoot":""}